<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="page_components" kind="page">
    <compoundname>page_components</compoundname>
    <title>Components</title>
    <innerpage refid="page_analog">Analog Modulation</innerpage>
    <innerpage refid="page_audio">Audio Interface</innerpage>
    <innerpage refid="page_blocks">Standard GNU Radio Blocks</innerpage>
    <innerpage refid="page_channels">Channel Model Blocks</innerpage>
    <innerpage refid="page_ctrlport">ControlPort</innerpage>
    <innerpage refid="page_digital">Digital Modulation</innerpage>
    <innerpage refid="page_packet_comms">Packet Communications</innerpage>
    <innerpage refid="page_fcd">FunCube Dongle Source</innerpage>
    <innerpage refid="page_fec">Forward Error Correction</innerpage>
    <innerpage refid="page_fft">FFT Signal Processing Blocks</innerpage>
    <innerpage refid="page_filter">Filter Signal Processing Blocks</innerpage>
    <innerpage refid="page_qtgui">QT Graphical User Interface</innerpage>
    <innerpage refid="page_uhd">UHD Interface</innerpage>
    <innerpage refid="page_vocoder">Voice Coders and Decoders (Vocoders)</innerpage>
    <innerpage refid="page_zeromq">ZeroMQ</innerpage>
    <detaileddescription>
<sect1 id="page_components_1components_blocks">
<title>GNU Radio Blocks</title>
<para>GNU Radio uses discrete signal processing blocks that are connected together to perform your signal processing application. This manual contain a list of all GNU Radio <ulink url="modules.html"><bold>C++ Blocks</bold></ulink>, sorted by category.</para><para>Please note that at this time, we haven&apos;t found an acceptable way to provide unified documentation for the C++ parts of the system and the parts written in Python (mostly hierarchical blocks). Until this gets worked out, please bear with us, or better yet, solve it for us!</para></sect1>
<sect1 id="page_components_1components_list">
<title>In-tree components</title>
<para>All our in-tree components have their own top-level documentation:</para><para><itemizedlist>
<listitem><para><ref refid="page_analog" kindref="compound">Analog Modulation</ref> </para></listitem>
<listitem><para><ref refid="page_audio" kindref="compound">Audio Interface</ref> </para></listitem>
<listitem><para><ref refid="page_blocks" kindref="compound">Standard GNU Radio Blocks</ref> </para></listitem>
<listitem><para><ref refid="page_channels" kindref="compound">Channel Model Blocks</ref> </para></listitem>
<listitem><para><ref refid="page_ctrlport" kindref="compound">ControlPort</ref> </para></listitem>
<listitem><para><ref refid="page_digital" kindref="compound">Digital Modulation</ref> </para></listitem>
<listitem><para><ref refid="page_packet_comms" kindref="compound">Packet Communications</ref> </para></listitem>
<listitem><para><ref refid="page_fcd" kindref="compound">FunCube Dongle Source</ref> </para></listitem>
<listitem><para><ref refid="page_fec" kindref="compound">Forward Error Correction</ref> </para></listitem>
<listitem><para><ref refid="page_fft" kindref="compound">FFT Signal Processing Blocks</ref> </para></listitem>
<listitem><para><ref refid="page_filter" kindref="compound">Filter Signal Processing Blocks</ref> </para></listitem>
<listitem><para><ref refid="page_qtgui" kindref="compound">QT Graphical User Interface</ref> </para></listitem>
<listitem><para><ref refid="page_uhd" kindref="compound">UHD Interface</ref> </para></listitem>
<listitem><para><ref refid="page_vocoder" kindref="compound">Voice Coders and Decoders (Vocoders)</ref> </para></listitem>
<listitem><para><ref refid="page_zeromq" kindref="compound">ZeroMQ</ref> </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
