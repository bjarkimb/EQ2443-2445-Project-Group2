<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classrpcbasic__register__get" kind="class" language="C++" prot="public">
    <compoundname>rpcbasic_register_get</compoundname>
    <basecompoundref refid="classrpcbasic__base" prot="public" virt="non-virtual">rpcbasic_base</basecompoundref>
    <includes refid="rpcregisterhelpers_8h" local="no">gnuradio/rpcregisterhelpers.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>Tfrom</declname>
        <defname>Tfrom</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrpcbasic__register__get_1aca0ac851c319386db28ab065a630d7ff" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rpcbasic_register_get&lt; T, Tfrom &gt;::d_id</definition>
        <argsstring></argsstring>
        <name>d_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1193" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrpcbasic__register__get_1aa0285518f6b7609d26454a3baab0996e" prot="private" static="no" mutable="no">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref></type>
        <definition>pmt::pmt_t rpcbasic_register_get&lt; T, Tfrom &gt;::d_min</definition>
        <argsstring></argsstring>
        <name>d_min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1194" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrpcbasic__register__get_1a44ac2f1fd167c5344e2844fa61e38e38" prot="private" static="no" mutable="no">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref></type>
        <definition>pmt::pmt_t rpcbasic_register_get&lt; T, Tfrom &gt;::d_max</definition>
        <argsstring></argsstring>
        <name>d_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1194" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrpcbasic__register__get_1aab96258279f401430a64a5bab467e740" prot="private" static="no" mutable="no">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref></type>
        <definition>pmt::pmt_t rpcbasic_register_get&lt; T, Tfrom &gt;::d_def</definition>
        <argsstring></argsstring>
        <name>d_def</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1194" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrpcbasic__register__get_1ac2c541b80d004713ba642241b6f17ba2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rpcbasic_register_get&lt; T, Tfrom &gt;::d_units</definition>
        <argsstring></argsstring>
        <name>d_units</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1195" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrpcbasic__register__get_1a13934e025e2a943e95d271d6ad3be72d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rpcbasic_register_get&lt; T, Tfrom &gt;::d_desc</definition>
        <argsstring></argsstring>
        <name>d_desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1195" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrpcbasic__register__get_1ad89fb69f777c74b2896ff1d9354a7c94" prot="private" static="no" mutable="no">
        <type><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref></type>
        <definition>priv_lvl_t rpcbasic_register_get&lt; T, Tfrom &gt;::d_minpriv</definition>
        <argsstring></argsstring>
        <name>d_minpriv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1196" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrpcbasic__register__get_1a38cc88a950f2ec4f139940bf4ca96a06" prot="private" static="no" mutable="no">
        <type><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref></type>
        <definition>DisplayType rpcbasic_register_get&lt; T, Tfrom &gt;::d_display</definition>
        <argsstring></argsstring>
        <name>d_display</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1197" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrpcbasic__register__get_1a2093a35136c8e41c04d6b88ea181d594" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* rpcbasic_register_get&lt; T, Tfrom &gt;::d_object</definition>
        <argsstring></argsstring>
        <name>d_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1198" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrpcbasic__register__get_1a923e56d2f4de6a7375413c59a964de29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rpcbasic_register_get&lt; T, Tfrom &gt;::rpcbasic_register_get</definition>
        <argsstring>(const std::string &amp;block_alias, const char *functionbase, Tfrom(T::*function)(), const pmt::pmt_t &amp;min, const pmt::pmt_t &amp;max, const pmt::pmt_t &amp;def, const char *units_=&quot;&quot;, const char *desc_=&quot;&quot;, priv_lvl_t minpriv_=RPC_PRIVLVL_MIN, DisplayType display_=DISPNULL)</argsstring>
        <name>rpcbasic_register_get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>block_alias</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>functionbase</declname>
        </param>
        <param>
          <type>Tfrom(T::*)()</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>def</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>units_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>desc_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref></type>
          <declname>minpriv_</declname>
          <defval><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref></defval>
        </param>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref></type>
          <declname>display_</declname>
          <defval><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref></defval>
        </param>
        <briefdescription>
<para>Adds the ability to get the variable over ControlPort. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor is specifically for <ref refid="classgr_1_1block" kindref="compound">gr::block</ref>&apos;s to use to add gettable variables to ControlPort. Generally meant to be used in <ref refid="classgr_1_1basic__block_1a7f8bf6b9f28014657a6e8b5f25ca7802" kindref="member">gr::block::setup_rpc</ref>.</para><para>Uses the block&apos;s alias to create the ControlPort interface. This alias is cross-referenced by the global_block_registry (static variable of type <ref refid="classgr_1_1block__registry" kindref="compound">gr::block_registry</ref>) to get the pointer to the block.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block_alias</parametername>
</parameternamelist>
<parameterdescription>
<para>Block&apos;s alias; use alias() to get it from the block. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>functionbase</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the function that we&apos;ll access over ControlPort </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>A function pointer to the real function accessed when called something like: &amp;[block class]::[variable]() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected minimum value the parameter can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected maximum value the parameter can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>def</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected default value the parameter can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>units_</parametername>
</parameternamelist>
<parameterdescription>
<para>A string to describe what units to represent the variable with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc_</parametername>
</parameternamelist>
<parameterdescription>
<para>A string to describing the variable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minpriv_</parametername>
</parameternamelist>
<parameterdescription>
<para>The required minimum privilege level </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>display_</parametername>
</parameternamelist>
<parameterdescription>
<para>The display mask </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1017" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1017" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1a267dd1e98043093e18d5e0748fc23c03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rpcbasic_register_get&lt; T, Tfrom &gt;::rpcbasic_register_get</definition>
        <argsstring>(const std::string &amp;block_alias, const char *functionbase, Tfrom(T::*function)() const, const pmt::pmt_t &amp;min, const pmt::pmt_t &amp;max, const pmt::pmt_t &amp;def, const char *units_=&quot;&quot;, const char *desc_=&quot;&quot;, priv_lvl_t minpriv_=RPC_PRIVLVL_MIN, DisplayType display_=DISPNULL)</argsstring>
        <name>rpcbasic_register_get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>block_alias</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>functionbase</declname>
        </param>
        <param>
          <type>Tfrom(T::*)() const</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>def</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>units_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>desc_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref></type>
          <declname>minpriv_</declname>
          <defval><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref></defval>
        </param>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref></type>
          <declname>display_</declname>
          <defval><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref></defval>
        </param>
        <briefdescription>
<para>Same as <ref refid="classrpcbasic__register__get_1a923e56d2f4de6a7375413c59a964de29" kindref="member">rpcbasic_register_get::rpcbasic_register_get</ref> that allows using &apos;[variable]() const&apos; getter functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1051" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1051" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1af3d110b18b0c08ac6bb18b683a06e565" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rpcbasic_register_get&lt; T, Tfrom &gt;::rpcbasic_register_get</definition>
        <argsstring>(const std::string &amp;name, const char *functionbase, T *obj, Tfrom(T::*function)(), const pmt::pmt_t &amp;min, const pmt::pmt_t &amp;max, const pmt::pmt_t &amp;def, const char *units_=&quot;&quot;, const char *desc_=&quot;&quot;, priv_lvl_t minpriv_=RPC_PRIVLVL_MIN, DisplayType display_=DISPNULL)</argsstring>
        <name>rpcbasic_register_get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>functionbase</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>Tfrom(T::*)()</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>def</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>units_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>desc_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref></type>
          <declname>minpriv_</declname>
          <defval><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref></defval>
        </param>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref></type>
          <declname>display_</declname>
          <defval><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref></defval>
        </param>
        <briefdescription>
<para>Adds the ability to get the variable over ControlPort. </para>        </briefdescription>
        <detaileddescription>
<para>Allows us to add non <ref refid="classgr_1_1block" kindref="compound">gr::block</ref> related objects to ControlPort. Instead of using the block&apos;s alias, we give it a <computeroutput>name</computeroutput> and the actual pointer to the object as <computeroutput>obj</computeroutput>. We just need to make sure that the pointer to this object is always valid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the object being set up for ControlPort access </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>functionbase</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the function that we&apos;ll access over ControlPort </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the object itself </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>A function pointer to the real function accessed when called something like: &amp;[block class]::set_[variable]() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected minimum value the parameter can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected maximum value the parameter can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>def</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected default value the parameter can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>units_</parametername>
</parameternamelist>
<parameterdescription>
<para>A string to describe what units to represent the variable with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc_</parametername>
</parameternamelist>
<parameterdescription>
<para>A string to describing the variable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minpriv_</parametername>
</parameternamelist>
<parameterdescription>
<para>The required minimum privilege level </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>display_</parametername>
</parameternamelist>
<parameterdescription>
<para>The display mask </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1104" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1104" bodyend="1132"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1a887fc7ee3ebfeeca9b3c6893e338ac93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rpcbasic_register_get&lt; T, Tfrom &gt;::rpcbasic_register_get</definition>
        <argsstring>(const std::string &amp;name, const char *functionbase, T *obj, Tfrom(T::*function)() const, const pmt::pmt_t &amp;min, const pmt::pmt_t &amp;max, const pmt::pmt_t &amp;def, const char *units_=&quot;&quot;, const char *desc_=&quot;&quot;, priv_lvl_t minpriv_=RPC_PRIVLVL_MIN, DisplayType display_=DISPNULL)</argsstring>
        <name>rpcbasic_register_get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>functionbase</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>Tfrom(T::*)() const</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>def</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>units_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>desc_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref></type>
          <declname>minpriv_</declname>
          <defval><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref></defval>
        </param>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref></type>
          <declname>display_</declname>
          <defval><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref></defval>
        </param>
        <briefdescription>
<para>Same as above that allows using &apos;[variable]() const&apos; getter functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1139" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1139" bodyend="1167"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1af293ab168e759115157696ae5873e5b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rpcbasic_register_get&lt; T, Tfrom &gt;::~rpcbasic_register_get</definition>
        <argsstring>()</argsstring>
        <name>~rpcbasic_register_get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1169" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1169" bodyend="1174"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref></type>
        <definition>pmt::pmt_t rpcbasic_register_get&lt; T, Tfrom &gt;::min</definition>
        <argsstring>() const </argsstring>
        <name>min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1176" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1176" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref></type>
        <definition>pmt::pmt_t rpcbasic_register_get&lt; T, Tfrom &gt;::max</definition>
        <argsstring>() const </argsstring>
        <name>max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1177" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1177" bodyend="1177"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref></type>
        <definition>pmt::pmt_t rpcbasic_register_get&lt; T, Tfrom &gt;::def</definition>
        <argsstring>() const </argsstring>
        <name>def</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1178" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1178" bodyend="1178"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1a3f406a8885c734201eceec383d2d2095" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rpcbasic_register_get&lt; T, Tfrom &gt;::units</definition>
        <argsstring>() const </argsstring>
        <name>units</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1179" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1179" bodyend="1179"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1a3168e9b59e860fac47e91cc2ea7e36ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rpcbasic_register_get&lt; T, Tfrom &gt;::description</definition>
        <argsstring>() const </argsstring>
        <name>description</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1180" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1180" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1a82c69bafeb7d69dc30536b8a3cd08a0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref></type>
        <definition>priv_lvl_t rpcbasic_register_get&lt; T, Tfrom &gt;::privilege_level</definition>
        <argsstring>() const </argsstring>
        <name>privilege_level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1181" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1181" bodyend="1181"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1af3c898b1090f5181f5d174b2550c1f02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref></type>
        <definition>DisplayType rpcbasic_register_get&lt; T, Tfrom &gt;::default_display</definition>
        <argsstring>() const </argsstring>
        <name>default_display</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1182" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1182" bodyend="1182"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1a8c685d0db022c326009e0133f401c4d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rpcbasic_register_get&lt; T, Tfrom &gt;::set_min</definition>
        <argsstring>(pmt::pmt_t p)</argsstring>
        <name>set_min</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1184" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1184" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1af0f9b3a5253781ba7a6d9c04a3838ed7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rpcbasic_register_get&lt; T, Tfrom &gt;::set_max</definition>
        <argsstring>(pmt::pmt_t p)</argsstring>
        <name>set_max</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1185" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1185" bodyend="1185"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1a1351e4d1294e75c5a534dcda0c4b1f9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rpcbasic_register_get&lt; T, Tfrom &gt;::set_def</definition>
        <argsstring>(pmt::pmt_t p)</argsstring>
        <name>set_def</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1186" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1186" bodyend="1186"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1adfde5eddca89662dd56136a8b5d0dc32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rpcbasic_register_get&lt; T, Tfrom &gt;::units</definition>
        <argsstring>(std::string u)</argsstring>
        <name>units</name>
        <param>
          <type>std::string</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1187" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1187" bodyend="1187"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1a7f5d20d6f9ff3f2f98e6512d77d20278" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rpcbasic_register_get&lt; T, Tfrom &gt;::description</definition>
        <argsstring>(std::string d)</argsstring>
        <name>description</name>
        <param>
          <type>std::string</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1188" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1188" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1afcc5e22b268e591db3f398ae67131e76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rpcbasic_register_get&lt; T, Tfrom &gt;::privilege_level</definition>
        <argsstring>(priv_lvl_t p)</argsstring>
        <name>privilege_level</name>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1189" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1189" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__get_1aa5453596b6f75204e011106c7af83558" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rpcbasic_register_get&lt; T, Tfrom &gt;::default_display</definition>
        <argsstring>(DisplayType d)</argsstring>
        <name>default_display</name>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1190" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1190" bodyend="1190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Registers a &apos;get&apos; function to get a parameter over ControlPort. </para>    </briefdescription>
    <detaileddescription>
<para>This class allows us to remotely get a value or parameter of the block over ControlPort. The get occurs by calling a getter accessor function of the class, usually [variable](), which is passed in as <computeroutput>function</computeroutput>.</para><para>We can set the (expected) minimum (<computeroutput>min</computeroutput>), maximum (<computeroutput>max</computeroutput>), and default (<computeroutput>def</computeroutput>) of the variables we will get. These values are not enforced, however, but can be useful for setting up graphs and other ways of bounding the data.</para><para>This class also allows us to provide information to the user about the variable, such as an appropriate unit (<computeroutput>units_</computeroutput>) as well as a description (<computeroutput>desc_</computeroutput>) about what the variable does.</para><para>The privilege (<computeroutput>minpriv_</computeroutput>) level is the minimum privilege level a remote must identify with to be able to call this function.</para><para>We also provide display hints (<computeroutput>display_</computeroutput>), which can be used by the ControlPort client application to know how to best display or even print the data. This is a mask of options for variables set in <ref refid="rpccallbackregister__base_8h" kindref="compound">rpccallbackregister_base.h</ref>. The mask is defined by one of the &quot;DisplayType Plotting Types&quot; and or&apos;d with any of the &quot;DisplayType
Options&quot; features. See &quot;Display Options&quot; in <ref refid="page_ctrlport" kindref="compound">ControlPort</ref> for details. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="13122">
        <label>rpcbasic_base</label>
        <link refid="classrpcbasic__base"/>
      </node>
      <node id="13121">
        <label>rpcbasic_register_get&lt; T, Tfrom &gt;</label>
        <link refid="classrpcbasic__register__get"/>
        <childnode refid="13122" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13124">
        <label>rpcbasic_base</label>
        <link refid="classrpcbasic__base"/>
      </node>
      <node id="13123">
        <label>rpcbasic_register_get&lt; T, Tfrom &gt;</label>
        <link refid="classrpcbasic__register__get"/>
        <childnode refid="13124" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="988" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="987" bodyend="1199"/>
    <listofallmembers>
      <member refid="classrpcbasic__register__get_1aab96258279f401430a64a5bab467e740" prot="private" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>d_def</name></member>
      <member refid="classrpcbasic__register__get_1a13934e025e2a943e95d271d6ad3be72d" prot="private" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>d_desc</name></member>
      <member refid="classrpcbasic__register__get_1a38cc88a950f2ec4f139940bf4ca96a06" prot="private" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>d_display</name></member>
      <member refid="classrpcbasic__register__get_1aca0ac851c319386db28ab065a630d7ff" prot="private" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>d_id</name></member>
      <member refid="classrpcbasic__register__get_1a44ac2f1fd167c5344e2844fa61e38e38" prot="private" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>d_max</name></member>
      <member refid="classrpcbasic__register__get_1aa0285518f6b7609d26454a3baab0996e" prot="private" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>d_min</name></member>
      <member refid="classrpcbasic__register__get_1ad89fb69f777c74b2896ff1d9354a7c94" prot="private" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>d_minpriv</name></member>
      <member refid="classrpcbasic__register__get_1a2093a35136c8e41c04d6b88ea181d594" prot="private" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>d_object</name></member>
      <member refid="classrpcbasic__register__get_1ac2c541b80d004713ba642241b6f17ba2" prot="private" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>d_units</name></member>
      <member refid="classrpcbasic__register__get_1a8e8817d61e64986ed9cb065dfb10620e" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>def</name></member>
      <member refid="classrpcbasic__register__get_1af3c898b1090f5181f5d174b2550c1f02" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>default_display</name></member>
      <member refid="classrpcbasic__register__get_1aa5453596b6f75204e011106c7af83558" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>default_display</name></member>
      <member refid="classrpcbasic__register__get_1a3168e9b59e860fac47e91cc2ea7e36ba" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>description</name></member>
      <member refid="classrpcbasic__register__get_1a7f5d20d6f9ff3f2f98e6512d77d20278" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>description</name></member>
      <member refid="classrpcbasic__register__get_1af47451ed7409cfd304f88966255dfa1e" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>max</name></member>
      <member refid="classrpcbasic__register__get_1a21215a0c267bc84264f40e3df351c0a2" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>min</name></member>
      <member refid="classrpcbasic__register__get_1a82c69bafeb7d69dc30536b8a3cd08a0a" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>privilege_level</name></member>
      <member refid="classrpcbasic__register__get_1afcc5e22b268e591db3f398ae67131e76" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>privilege_level</name></member>
      <member refid="classrpcbasic__base_1ab0f3d0bf323958aa51750ccea26cefdb" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>rpcbasic_base</name></member>
      <member refid="classrpcbasic__register__get_1a923e56d2f4de6a7375413c59a964de29" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>rpcbasic_register_get</name></member>
      <member refid="classrpcbasic__register__get_1a267dd1e98043093e18d5e0748fc23c03" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>rpcbasic_register_get</name></member>
      <member refid="classrpcbasic__register__get_1af3d110b18b0c08ac6bb18b683a06e565" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>rpcbasic_register_get</name></member>
      <member refid="classrpcbasic__register__get_1a887fc7ee3ebfeeca9b3c6893e338ac93" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>rpcbasic_register_get</name></member>
      <member refid="classrpcbasic__register__get_1a1351e4d1294e75c5a534dcda0c4b1f9e" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>set_def</name></member>
      <member refid="classrpcbasic__register__get_1af0f9b3a5253781ba7a6d9c04a3838ed7" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>set_max</name></member>
      <member refid="classrpcbasic__register__get_1a8c685d0db022c326009e0133f401c4d9" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>set_min</name></member>
      <member refid="classrpcbasic__register__get_1a3f406a8885c734201eceec383d2d2095" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>units</name></member>
      <member refid="classrpcbasic__register__get_1adfde5eddca89662dd56136a8b5d0dc32" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>units</name></member>
      <member refid="classrpcbasic__base_1ae3f50018ff739652e1a5420acc1503c3" prot="public" virt="virtual"><scope>rpcbasic_register_get</scope><name>~rpcbasic_base</name></member>
      <member refid="classrpcbasic__register__get_1af293ab168e759115157696ae5873e5b4" prot="public" virt="non-virtual"><scope>rpcbasic_register_get</scope><name>~rpcbasic_register_get</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
