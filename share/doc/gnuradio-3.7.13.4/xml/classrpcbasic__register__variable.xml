<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classrpcbasic__register__variable" kind="class" language="C++" prot="public">
    <compoundname>rpcbasic_register_variable</compoundname>
    <basecompoundref refid="classrpcbasic__base" prot="public" virt="non-virtual">rpcbasic_base</basecompoundref>
    <derivedcompoundref refid="classrpcbasic__register__variable__rw" prot="public" virt="non-virtual">rpcbasic_register_variable_rw&lt; Tfrom &gt;</derivedcompoundref>
    <includes refid="rpcregisterhelpers_8h" local="no">gnuradio/rpcregisterhelpers.h</includes>
    <templateparamlist>
      <param>
        <type>typename Tfrom</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrpcbasic__register__variable_1a5f20e37f5f8a884f3c209e0f2f45b49e" prot="protected" static="no" mutable="no">
        <type><ref refid="classrpcbasic__register__get" kindref="compound">rpcbasic_register_get</ref>&lt; <ref refid="classrpcbasic__register__variable" kindref="compound">rpcbasic_register_variable</ref>&lt; Tfrom &gt;, Tfrom &gt;</type>
        <definition>rpcbasic_register_get&lt; rpcbasic_register_variable&lt;Tfrom&gt;, Tfrom &gt; rpcbasic_register_variable&lt; Tfrom &gt;::d_rpc_reg</definition>
        <argsstring></argsstring>
        <name>d_rpc_reg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1245" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrpcbasic__register__variable_1a1a5c2b516653410e4cd77cf488f6e441" prot="protected" static="no" mutable="no">
        <type>Tfrom *</type>
        <definition>Tfrom* rpcbasic_register_variable&lt; Tfrom &gt;::d_variable</definition>
        <argsstring></argsstring>
        <name>d_variable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1246" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1246" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrpcbasic__register__variable_1a2bcd5180c99484455030fdba6c1c185a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Tfrom</type>
        <definition>Tfrom rpcbasic_register_variable&lt; Tfrom &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1247" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1247" bodyend="1247"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrpcbasic__register__variable_1a899aa501486d45d8839929b9e412f92f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rpcbasic_register_variable&lt; Tfrom &gt;::setptr</definition>
        <argsstring>(Tfrom *_variable)</argsstring>
        <name>setptr</name>
        <param>
          <type>Tfrom *</type>
          <declname>_variable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1251" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1251" bodyend="1254"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__variable_1ab0217393df3119ecfa36f7d5ea75a801" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rpcbasic_register_variable&lt; Tfrom &gt;::rpcbasic_register_variable</definition>
        <argsstring>()</argsstring>
        <name>rpcbasic_register_variable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Empty constructor which should never be called but needs to exist for ues in varous STL data structures </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1259" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1259" bodyend="1266"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__register__variable_1a883b1a89b44a021f3c18838d9958a393" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rpcbasic_register_variable&lt; Tfrom &gt;::rpcbasic_register_variable</definition>
        <argsstring>(const std::string &amp;namebase, const char *functionbase, Tfrom *variable, const pmt::pmt_t &amp;min, const pmt::pmt_t &amp;max, const pmt::pmt_t &amp;def, const char *units_=&quot;&quot;, const char *desc_=&quot;&quot;, priv_lvl_t minpriv_=RPC_PRIVLVL_MIN, DisplayType display_=DISPNULL)</argsstring>
        <name>rpcbasic_register_variable</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>namebase</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>functionbase</declname>
        </param>
        <param>
          <type>Tfrom *</type>
          <declname>variable</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>def</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>units_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>desc_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096" kindref="member">priv_lvl_t</ref></type>
          <declname>minpriv_</declname>
          <defval><ref refid="rpccallbackregister__base_8h_1a49bbe5b25d6264b2ebfc1ffd260cb096acc5682c79636a2486c194425df36d2d4" kindref="member">RPC_PRIVLVL_MIN</ref></defval>
        </param>
        <param>
          <type><ref refid="rpccallbackregister__base_8h_1aba9c0dec36f846b8a092d7d45ad4ecd3" kindref="member">DisplayType</ref></type>
          <declname>display_</declname>
          <defval><ref refid="rpccallbackregister__base_8h_1acf1fe613bf65594fb6dc171b29c672fd" kindref="member">DISPNULL</ref></defval>
        </param>
        <briefdescription>
<para>Adds the ability to get the variable over ControlPort. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a new getter accessor function to read <computeroutput>variable</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namebase</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the object being set up for ControlPort access </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>functionbase</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the function that we&apos;ll access over ControlPort </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>variable</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the variable, possibly as a member of a class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected minimum value the parameter can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected maximum value the parameter can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>def</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected default value the parameter can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>units_</parametername>
</parameternamelist>
<parameterdescription>
<para>A string to describe what units to represent the variable with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc_</parametername>
</parameternamelist>
<parameterdescription>
<para>A string to describing the variable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minpriv_</parametername>
</parameternamelist>
<parameterdescription>
<para>The required minimum privilege level </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>display_</parametername>
</parameternamelist>
<parameterdescription>
<para>The display mask </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1286" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1286" bodyend="1299"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Registers a read-only function to get a parameter over ControlPort. </para>    </briefdescription>
    <detaileddescription>
<para>This class allows us to remotely get a value or parameter of the block over ControlPort. Unlike the <ref refid="classrpcbasic__register__get" kindref="compound">rpcbasic_register_get</ref> class, this version is passed the variable directly and establishes a getter for us, so there is no need to have a getter function already in the object.</para><para>This version is for read-only get access.</para><para>We can set the (expected) minimum (<computeroutput>min</computeroutput>), maximum (<computeroutput>max</computeroutput>), and default (<computeroutput>def</computeroutput>) of the variables we will get. These values are not enforced, however, but can be useful for setting up graphs and other ways of bounding the data.</para><para>This class also allows us to provide information to the user about the variable, such as an appropriate unit (<computeroutput>units_</computeroutput>) as well as a description (<computeroutput>desc_</computeroutput>) about what the variable does.</para><para>The privilege (<computeroutput>minpriv_</computeroutput>) level is the minimum privilege level a remote must identify with to be able to call this function.</para><para>We also provide display hints (<computeroutput>display_</computeroutput>), which can be used by the ControlPort client application to know how to best display or even print the data. This is a mask of options for variables set in <ref refid="rpccallbackregister__base_8h" kindref="compound">rpccallbackregister_base.h</ref>. The mask is defined by one of the &quot;DisplayType Plotting Types&quot; and or&apos;d with any of the &quot;DisplayType
Options&quot; features. See &quot;Display Options&quot; in <ref refid="page_ctrlport" kindref="compound">ControlPort</ref> for details. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="13138">
        <label>rpcbasic_base</label>
        <link refid="classrpcbasic__base"/>
      </node>
      <node id="13139">
        <label>rpcbasic_register_variable_rw&lt; Tfrom &gt;</label>
        <link refid="classrpcbasic__register__variable__rw"/>
        <childnode refid="13137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13137">
        <label>rpcbasic_register_variable&lt; Tfrom &gt;</label>
        <link refid="classrpcbasic__register__variable"/>
        <childnode refid="13138" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13141">
        <label>rpcbasic_base</label>
        <link refid="classrpcbasic__base"/>
      </node>
      <node id="13142">
        <label>rpcbasic_register_get&lt; rpcbasic_register_variable&lt; Tfrom &gt;, Tfrom &gt;</label>
        <link refid="classrpcbasic__register__get"/>
        <childnode refid="13141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13140">
        <label>rpcbasic_register_variable&lt; Tfrom &gt;</label>
        <link refid="classrpcbasic__register__variable"/>
        <childnode refid="13141" relation="public-inheritance">
        </childnode>
        <childnode refid="13142" relation="usage">
          <edgelabel>d_rpc_reg</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="1243" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="1241" bodyend="1300"/>
    <listofallmembers>
      <member refid="classrpcbasic__register__variable_1a5f20e37f5f8a884f3c209e0f2f45b49e" prot="protected" virt="non-virtual"><scope>rpcbasic_register_variable</scope><name>d_rpc_reg</name></member>
      <member refid="classrpcbasic__register__variable_1a1a5c2b516653410e4cd77cf488f6e441" prot="protected" virt="non-virtual"><scope>rpcbasic_register_variable</scope><name>d_variable</name></member>
      <member refid="classrpcbasic__register__variable_1a2bcd5180c99484455030fdba6c1c185a" prot="protected" virt="non-virtual"><scope>rpcbasic_register_variable</scope><name>get</name></member>
      <member refid="classrpcbasic__base_1ab0f3d0bf323958aa51750ccea26cefdb" prot="public" virt="non-virtual"><scope>rpcbasic_register_variable</scope><name>rpcbasic_base</name></member>
      <member refid="classrpcbasic__register__variable_1ab0217393df3119ecfa36f7d5ea75a801" prot="public" virt="non-virtual"><scope>rpcbasic_register_variable</scope><name>rpcbasic_register_variable</name></member>
      <member refid="classrpcbasic__register__variable_1a883b1a89b44a021f3c18838d9958a393" prot="public" virt="non-virtual"><scope>rpcbasic_register_variable</scope><name>rpcbasic_register_variable</name></member>
      <member refid="classrpcbasic__register__variable_1a899aa501486d45d8839929b9e412f92f" prot="public" virt="non-virtual"><scope>rpcbasic_register_variable</scope><name>setptr</name></member>
      <member refid="classrpcbasic__base_1ae3f50018ff739652e1a5420acc1503c3" prot="public" virt="virtual"><scope>rpcbasic_register_variable</scope><name>~rpcbasic_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
