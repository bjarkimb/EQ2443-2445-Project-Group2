<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4" kind="class" language="C++" prot="public">
    <compoundname>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</compoundname>
    <basecompoundref refid="classrpcinserter__base" prot="public" virt="virtual">rpcinserter_base&lt; T, std::complex&lt; double &gt; &gt;</basecompoundref>
    <includes refid="rpcregisterhelpers_8h" local="no">gnuradio/rpcregisterhelpers.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a916fd88f21bbc6097ad04b153a9cf5a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;::rpcbasic_inserter</definition>
        <argsstring>(T *source, std::complex&lt; double &gt;(T::*func)() const)</argsstring>
        <name>rpcbasic_inserter</name>
        <param>
          <type>T *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;(T::*)() const</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="599" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="599" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a86d0aff4ccb367911a97344b46b071b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;::rpcbasic_inserter</definition>
        <argsstring>(T *source, std::complex&lt; double &gt;(T::*func)())</argsstring>
        <name>rpcbasic_inserter</name>
        <param>
          <type>T *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;(T::*)()</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="603" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="603" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a595352bc58eb771544780760657670b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref></type>
        <definition>pmt::pmt_t rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;::retrieve</definition>
        <argsstring>()</argsstring>
        <name>retrieve</name>
        <reimplements refid="classgr_1_1messages_1_1msg__producer_1a3e4471e76c488d5dfb4a7d2ffdc766cf">retrieve</reimplements>
        <briefdescription>
<para>send <computeroutput>msg</computeroutput> to <computeroutput>msg_producer</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="607" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="607" bodyend="612"/>
        <references refid="classrpcextractor__base_1a43d3515d8de66880ed10c992df00d8ea" compoundref="rpcregisterhelpers_8h" startline="64">rpcextractor_base&lt; T, Tto &gt;::_func</references>
        <references refid="classrpcextractor__base_1afb9a96dc63c5144792ca5e086476818f" compoundref="rpcregisterhelpers_8h" startline="63">rpcextractor_base&lt; T, Tto &gt;::_source</references>
        <references refid="namespacepmt_1a1441d157003d06deddecadfad54c04a7">pmt::from_complex</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specialized inserter class for complex (double) data. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="13050">
        <label>rpcinserter_base&lt; T, std::complex&lt; double &gt; &gt;</label>
        <link refid="classrpcinserter__base"/>
        <childnode refid="13051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13051">
        <label>gr::messages::msg_producer</label>
        <link refid="classgr_1_1messages_1_1msg__producer"/>
      </node>
      <node id="13049">
        <label>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</label>
        <link refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4"/>
        <childnode refid="13050" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13056">
        <label>T</label>
      </node>
      <node id="13053">
        <label>rpcinserter_base&lt; T, std::complex&lt; double &gt; &gt;</label>
        <link refid="classrpcinserter__base"/>
        <childnode refid="13054" relation="public-inheritance">
        </childnode>
        <childnode refid="13055" relation="usage">
          <edgelabel>_func</edgelabel>
        </childnode>
        <childnode refid="13056" relation="usage">
          <edgelabel>_source</edgelabel>
        </childnode>
      </node>
      <node id="13054">
        <label>gr::messages::msg_producer</label>
        <link refid="classgr_1_1messages_1_1msg__producer"/>
      </node>
      <node id="13055">
        <label>std::complex&lt; double &gt;</label>
      </node>
      <node id="13052">
        <label>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</label>
        <link refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4"/>
        <childnode refid="13053" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" line="597" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpcregisterhelpers.h" bodystart="596" bodyend="613"/>
    <listofallmembers>
      <member refid="classrpcinserter__base_1a26d399eb83eace035da2386ac16fe8ba" prot="protected" virt="non-virtual"><scope>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</scope><name>_func</name></member>
      <member refid="classrpcinserter__base_1a8f89af5214a3c15b93dad9ba4e76b88e" prot="protected" virt="non-virtual"><scope>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</scope><name>_source</name></member>
      <member refid="classgr_1_1messages_1_1msg__producer_1aecc9d396bc43ecd459b88dac2f9ae3de" prot="public" virt="non-virtual"><scope>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</scope><name>msg_producer</name></member>
      <member refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a595352bc58eb771544780760657670b1" prot="public" virt="virtual"><scope>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</scope><name>retrieve</name></member>
      <member refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a916fd88f21bbc6097ad04b153a9cf5a2" prot="public" virt="non-virtual"><scope>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</scope><name>rpcbasic_inserter</name></member>
      <member refid="classrpcbasic__inserter_3_01T_00_01std_1_1complex_3_01double_01_4_01_4_1a86d0aff4ccb367911a97344b46b071b5" prot="public" virt="non-virtual"><scope>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</scope><name>rpcbasic_inserter</name></member>
      <member refid="classrpcinserter__base_1ad0a669031de1cca36cf612f7d4f74b05" prot="public" virt="non-virtual"><scope>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</scope><name>rpcinserter_base</name></member>
      <member refid="classrpcinserter__base_1a64dc370d338f128215fa33e237166a18" prot="public" virt="non-virtual"><scope>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</scope><name>rpcinserter_base</name></member>
      <member refid="classgr_1_1messages_1_1msg__producer_1ae2911393628f0a7e7e24d2336f14a9b3" prot="public" virt="virtual"><scope>rpcbasic_inserter&lt; T, std::complex&lt; double &gt; &gt;</scope><name>~msg_producer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
