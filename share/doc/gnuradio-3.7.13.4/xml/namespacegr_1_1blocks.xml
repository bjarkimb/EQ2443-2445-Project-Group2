<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacegr_1_1blocks" kind="namespace" language="C++">
    <compoundname>gr::blocks</compoundname>
    <innerclass refid="classgr_1_1blocks_1_1abs__ff" prot="public">gr::blocks::abs_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1abs__ii" prot="public">gr::blocks::abs_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1abs__ss" prot="public">gr::blocks::abs_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__cc" prot="public">gr::blocks::add_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__const__bb" prot="public">gr::blocks::add_const_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__const__cc" prot="public">gr::blocks::add_const_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__const__ff" prot="public">gr::blocks::add_const_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__const__ii" prot="public">gr::blocks::add_const_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__const__ss" prot="public">gr::blocks::add_const_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__const__vbb" prot="public">gr::blocks::add_const_vbb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__const__vcc" prot="public">gr::blocks::add_const_vcc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__const__vff" prot="public">gr::blocks::add_const_vff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__const__vii" prot="public">gr::blocks::add_const_vii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__const__vss" prot="public">gr::blocks::add_const_vss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__ff" prot="public">gr::blocks::add_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__ii" prot="public">gr::blocks::add_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1add__ss" prot="public">gr::blocks::add_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1and__bb" prot="public">gr::blocks::and_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1and__const__bb" prot="public">gr::blocks::and_const_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1and__const__ii" prot="public">gr::blocks::and_const_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1and__const__ss" prot="public">gr::blocks::and_const_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1and__ii" prot="public">gr::blocks::and_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1and__ss" prot="public">gr::blocks::and_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1annotator__1to1" prot="public">gr::blocks::annotator_1to1</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1annotator__alltoall" prot="public">gr::blocks::annotator_alltoall</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1annotator__raw" prot="public">gr::blocks::annotator_raw</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1argmax__fs" prot="public">gr::blocks::argmax_fs</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1argmax__is" prot="public">gr::blocks::argmax_is</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1argmax__ss" prot="public">gr::blocks::argmax_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1bin__statistics__f" prot="public">gr::blocks::bin_statistics_f</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1burst__tagger" prot="public">gr::blocks::burst_tagger</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1char__to__float" prot="public">gr::blocks::char_to_float</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1char__to__short" prot="public">gr::blocks::char_to_short</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1check__lfsr__32k__s" prot="public">gr::blocks::check_lfsr_32k_s</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1complex__to__arg" prot="public">gr::blocks::complex_to_arg</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1complex__to__float" prot="public">gr::blocks::complex_to_float</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1complex__to__imag" prot="public">gr::blocks::complex_to_imag</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1complex__to__interleaved__char" prot="public">gr::blocks::complex_to_interleaved_char</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1complex__to__interleaved__short" prot="public">gr::blocks::complex_to_interleaved_short</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1complex__to__mag" prot="public">gr::blocks::complex_to_mag</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1complex__to__mag__squared" prot="public">gr::blocks::complex_to_mag_squared</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1complex__to__magphase" prot="public">gr::blocks::complex_to_magphase</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1complex__to__real" prot="public">gr::blocks::complex_to_real</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1conjugate__cc" prot="public">gr::blocks::conjugate_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1control__loop" prot="public">gr::blocks::control_loop</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1copy" prot="public">gr::blocks::copy</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1ctrlport__probe2__b" prot="public">gr::blocks::ctrlport_probe2_b</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1ctrlport__probe2__c" prot="public">gr::blocks::ctrlport_probe2_c</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1ctrlport__probe2__f" prot="public">gr::blocks::ctrlport_probe2_f</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1ctrlport__probe2__i" prot="public">gr::blocks::ctrlport_probe2_i</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1ctrlport__probe2__s" prot="public">gr::blocks::ctrlport_probe2_s</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1ctrlport__probe__c" prot="public">gr::blocks::ctrlport_probe_c</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1deinterleave" prot="public">gr::blocks::deinterleave</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1delay" prot="public">gr::blocks::delay</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1divide__cc" prot="public">gr::blocks::divide_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1divide__ff" prot="public">gr::blocks::divide_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1divide__ii" prot="public">gr::blocks::divide_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1divide__ss" prot="public">gr::blocks::divide_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1endian__swap" prot="public">gr::blocks::endian_swap</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1exponentiate__const__cci" prot="public">gr::blocks::exponentiate_const_cci</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1file__descriptor__sink" prot="public">gr::blocks::file_descriptor_sink</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1file__descriptor__source" prot="public">gr::blocks::file_descriptor_source</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1file__meta__sink" prot="public">gr::blocks::file_meta_sink</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1file__meta__source" prot="public">gr::blocks::file_meta_source</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1file__sink" prot="public">gr::blocks::file_sink</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1file__sink__base" prot="public">gr::blocks::file_sink_base</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1file__source" prot="public">gr::blocks::file_source</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1float__to__char" prot="public">gr::blocks::float_to_char</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1float__to__complex" prot="public">gr::blocks::float_to_complex</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1float__to__int" prot="public">gr::blocks::float_to_int</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1float__to__short" prot="public">gr::blocks::float_to_short</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1float__to__uchar" prot="public">gr::blocks::float_to_uchar</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1head" prot="public">gr::blocks::head</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1int__to__float" prot="public">gr::blocks::int_to_float</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1integrate__cc" prot="public">gr::blocks::integrate_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1integrate__ff" prot="public">gr::blocks::integrate_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1integrate__ii" prot="public">gr::blocks::integrate_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1integrate__ss" prot="public">gr::blocks::integrate_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1interleave" prot="public">gr::blocks::interleave</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1interleaved__char__to__complex" prot="public">gr::blocks::interleaved_char_to_complex</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1interleaved__short__to__complex" prot="public">gr::blocks::interleaved_short_to_complex</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1keep__m__in__n" prot="public">gr::blocks::keep_m_in_n</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1keep__one__in__n" prot="public">gr::blocks::keep_one_in_n</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1lfsr__15__1__0" prot="public">gr::blocks::lfsr_15_1_0</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1lfsr__32k" prot="public">gr::blocks::lfsr_32k</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1lfsr__32k__source__s" prot="public">gr::blocks::lfsr_32k_source_s</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1magphase__to__complex" prot="public">gr::blocks::magphase_to_complex</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1max__ff" prot="public">gr::blocks::max_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1max__ii" prot="public">gr::blocks::max_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1max__ss" prot="public">gr::blocks::max_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1message__burst__source" prot="public">gr::blocks::message_burst_source</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1message__debug" prot="public">gr::blocks::message_debug</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1message__sink" prot="public">gr::blocks::message_sink</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1message__source" prot="public">gr::blocks::message_source</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1message__strobe" prot="public">gr::blocks::message_strobe</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1message__strobe__random" prot="public">gr::blocks::message_strobe_random</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1min__ff" prot="public">gr::blocks::min_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1min__ii" prot="public">gr::blocks::min_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1min__ss" prot="public">gr::blocks::min_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1moving__average__cc" prot="public">gr::blocks::moving_average_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1moving__average__ff" prot="public">gr::blocks::moving_average_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1moving__average__ii" prot="public">gr::blocks::moving_average_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1moving__average__ss" prot="public">gr::blocks::moving_average_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__by__tag__value__cc" prot="public">gr::blocks::multiply_by_tag_value_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__cc" prot="public">gr::blocks::multiply_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__conjugate__cc" prot="public">gr::blocks::multiply_conjugate_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__const__cc" prot="public">gr::blocks::multiply_const_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__const__ff" prot="public">gr::blocks::multiply_const_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__const__ii" prot="public">gr::blocks::multiply_const_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__const__ss" prot="public">gr::blocks::multiply_const_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__const__vcc" prot="public">gr::blocks::multiply_const_vcc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__const__vff" prot="public">gr::blocks::multiply_const_vff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__const__vii" prot="public">gr::blocks::multiply_const_vii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__const__vss" prot="public">gr::blocks::multiply_const_vss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__ff" prot="public">gr::blocks::multiply_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__ii" prot="public">gr::blocks::multiply_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__matrix__cc" prot="public">gr::blocks::multiply_matrix_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__matrix__ff" prot="public">gr::blocks::multiply_matrix_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1multiply__ss" prot="public">gr::blocks::multiply_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1mute__cc" prot="public">gr::blocks::mute_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1mute__ff" prot="public">gr::blocks::mute_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1mute__ii" prot="public">gr::blocks::mute_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1mute__ss" prot="public">gr::blocks::mute_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1nlog10__ff" prot="public">gr::blocks::nlog10_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1nop" prot="public">gr::blocks::nop</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1not__bb" prot="public">gr::blocks::not_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1not__ii" prot="public">gr::blocks::not_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1not__ss" prot="public">gr::blocks::not_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1null__sink" prot="public">gr::blocks::null_sink</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1null__source" prot="public">gr::blocks::null_source</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1or__bb" prot="public">gr::blocks::or_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1or__ii" prot="public">gr::blocks::or_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1or__ss" prot="public">gr::blocks::or_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1pack__k__bits__bb" prot="public">gr::blocks::pack_k_bits_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1packed__to__unpacked__bb" prot="public">gr::blocks::packed_to_unpacked_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1packed__to__unpacked__ii" prot="public">gr::blocks::packed_to_unpacked_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1packed__to__unpacked__ss" prot="public">gr::blocks::packed_to_unpacked_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1patterned__interleaver" prot="public">gr::blocks::patterned_interleaver</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1pdu__filter" prot="public">gr::blocks::pdu_filter</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1pdu__remove" prot="public">gr::blocks::pdu_remove</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1pdu__set" prot="public">gr::blocks::pdu_set</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1pdu__to__tagged__stream" prot="public">gr::blocks::pdu_to_tagged_stream</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1peak__detector2__fb" prot="public">gr::blocks::peak_detector2_fb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1peak__detector__fb" prot="public">gr::blocks::peak_detector_fb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1peak__detector__ib" prot="public">gr::blocks::peak_detector_ib</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1peak__detector__sb" prot="public">gr::blocks::peak_detector_sb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1plateau__detector__fb" prot="public">gr::blocks::plateau_detector_fb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1probe__rate" prot="public">gr::blocks::probe_rate</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1probe__signal__b" prot="public">gr::blocks::probe_signal_b</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1probe__signal__c" prot="public">gr::blocks::probe_signal_c</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1probe__signal__f" prot="public">gr::blocks::probe_signal_f</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1probe__signal__i" prot="public">gr::blocks::probe_signal_i</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1probe__signal__s" prot="public">gr::blocks::probe_signal_s</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1probe__signal__vb" prot="public">gr::blocks::probe_signal_vb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1probe__signal__vc" prot="public">gr::blocks::probe_signal_vc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1probe__signal__vf" prot="public">gr::blocks::probe_signal_vf</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1probe__signal__vi" prot="public">gr::blocks::probe_signal_vi</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1probe__signal__vs" prot="public">gr::blocks::probe_signal_vs</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1random__pdu" prot="public">gr::blocks::random_pdu</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1regenerate__bb" prot="public">gr::blocks::regenerate_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1repack__bits__bb" prot="public">gr::blocks::repack_bits_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1repeat" prot="public">gr::blocks::repeat</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1rms__cf" prot="public">gr::blocks::rms_cf</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1rms__ff" prot="public">gr::blocks::rms_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1rotator" prot="public">gr::blocks::rotator</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1rotator__cc" prot="public">gr::blocks::rotator_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1sample__and__hold__bb" prot="public">gr::blocks::sample_and_hold_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1sample__and__hold__ff" prot="public">gr::blocks::sample_and_hold_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1sample__and__hold__ii" prot="public">gr::blocks::sample_and_hold_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1sample__and__hold__ss" prot="public">gr::blocks::sample_and_hold_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1short__to__char" prot="public">gr::blocks::short_to_char</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1short__to__float" prot="public">gr::blocks::short_to_float</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1skiphead" prot="public">gr::blocks::skiphead</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1socket__pdu" prot="public">gr::blocks::socket_pdu</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1stream__mux" prot="public">gr::blocks::stream_mux</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1stream__to__streams" prot="public">gr::blocks::stream_to_streams</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1stream__to__tagged__stream" prot="public">gr::blocks::stream_to_tagged_stream</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1stream__to__vector" prot="public">gr::blocks::stream_to_vector</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1streams__to__stream" prot="public">gr::blocks::streams_to_stream</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1streams__to__vector" prot="public">gr::blocks::streams_to_vector</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1stretch__ff" prot="public">gr::blocks::stretch_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1sub__cc" prot="public">gr::blocks::sub_cc</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1sub__ff" prot="public">gr::blocks::sub_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1sub__ii" prot="public">gr::blocks::sub_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1sub__ss" prot="public">gr::blocks::sub_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tag__debug" prot="public">gr::blocks::tag_debug</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tag__gate" prot="public">gr::blocks::tag_gate</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tag__share" prot="public">gr::blocks::tag_share</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tagged__file__sink" prot="public">gr::blocks::tagged_file_sink</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tagged__stream__align" prot="public">gr::blocks::tagged_stream_align</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tagged__stream__multiply__length" prot="public">gr::blocks::tagged_stream_multiply_length</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tagged__stream__mux" prot="public">gr::blocks::tagged_stream_mux</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tagged__stream__to__pdu" prot="public">gr::blocks::tagged_stream_to_pdu</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tags__strobe" prot="public">gr::blocks::tags_strobe</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tcp__server__sink" prot="public">gr::blocks::tcp_server_sink</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1test__tag__variable__rate__ff" prot="public">gr::blocks::test_tag_variable_rate_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1threshold__ff" prot="public">gr::blocks::threshold_ff</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1throttle" prot="public">gr::blocks::throttle</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1transcendental" prot="public">gr::blocks::transcendental</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tsb__vector__sink__b" prot="public">gr::blocks::tsb_vector_sink_b</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tsb__vector__sink__c" prot="public">gr::blocks::tsb_vector_sink_c</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tsb__vector__sink__f" prot="public">gr::blocks::tsb_vector_sink_f</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tsb__vector__sink__i" prot="public">gr::blocks::tsb_vector_sink_i</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tsb__vector__sink__s" prot="public">gr::blocks::tsb_vector_sink_s</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1tuntap__pdu" prot="public">gr::blocks::tuntap_pdu</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1uchar__to__float" prot="public">gr::blocks::uchar_to_float</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1udp__sink" prot="public">gr::blocks::udp_sink</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1udp__source" prot="public">gr::blocks::udp_source</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1unpack__k__bits__bb" prot="public">gr::blocks::unpack_k_bits_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1unpacked__to__packed__bb" prot="public">gr::blocks::unpacked_to_packed_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1unpacked__to__packed__ii" prot="public">gr::blocks::unpacked_to_packed_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1unpacked__to__packed__ss" prot="public">gr::blocks::unpacked_to_packed_ss</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vco__c" prot="public">gr::blocks::vco_c</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vco__f" prot="public">gr::blocks::vco_f</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__insert__b" prot="public">gr::blocks::vector_insert_b</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__insert__c" prot="public">gr::blocks::vector_insert_c</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__insert__f" prot="public">gr::blocks::vector_insert_f</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__insert__i" prot="public">gr::blocks::vector_insert_i</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__insert__s" prot="public">gr::blocks::vector_insert_s</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__map" prot="public">gr::blocks::vector_map</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__sink__b" prot="public">gr::blocks::vector_sink_b</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__sink__c" prot="public">gr::blocks::vector_sink_c</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__sink__f" prot="public">gr::blocks::vector_sink_f</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__sink__i" prot="public">gr::blocks::vector_sink_i</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__sink__s" prot="public">gr::blocks::vector_sink_s</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__source__b" prot="public">gr::blocks::vector_source_b</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__source__c" prot="public">gr::blocks::vector_source_c</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__source__f" prot="public">gr::blocks::vector_source_f</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__source__i" prot="public">gr::blocks::vector_source_i</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__source__s" prot="public">gr::blocks::vector_source_s</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__to__stream" prot="public">gr::blocks::vector_to_stream</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1vector__to__streams" prot="public">gr::blocks::vector_to_streams</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1wavfile__sink" prot="public">gr::blocks::wavfile_sink</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1wavfile__source" prot="public">gr::blocks::wavfile_source</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1xor__bb" prot="public">gr::blocks::xor_bb</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1xor__ii" prot="public">gr::blocks::xor_ii</innerclass>
    <innerclass refid="classgr_1_1blocks_1_1xor__ss" prot="public">gr::blocks::xor_ss</innerclass>
    <innernamespace refid="namespacegr_1_1blocks_1_1kernel">gr::blocks::kernel</innernamespace>
    <innernamespace refid="namespacegr_1_1blocks_1_1pdu">gr::blocks::pdu</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacegr_1_1blocks_1aaf04a89b376fbc06cb75effeb40111b6" prot="public" static="no">
        <name>gr_file_types</name>
        <enumvalue id="namespacegr_1_1blocks_1aaf04a89b376fbc06cb75effeb40111b6a0ccdd1487ca349aea3efde7daecaef65" prot="public">
          <name>GR_FILE_BYTE</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegr_1_1blocks_1aaf04a89b376fbc06cb75effeb40111b6a9398c5264fb25d5aa2a9d08f1e68ad79" prot="public">
          <name>GR_FILE_CHAR</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegr_1_1blocks_1aaf04a89b376fbc06cb75effeb40111b6af08508c6dd7fc2dfb9529a9d82d6164f" prot="public">
          <name>GR_FILE_SHORT</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegr_1_1blocks_1aaf04a89b376fbc06cb75effeb40111b6ad98b7975f581d3864006ca663aee722d" prot="public">
          <name>GR_FILE_INT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegr_1_1blocks_1aaf04a89b376fbc06cb75effeb40111b6a07ad82268bf96f539676f8545be40ec8" prot="public">
          <name>GR_FILE_LONG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegr_1_1blocks_1aaf04a89b376fbc06cb75effeb40111b6aeba7eac37ba5a0ab76cf12efae97e39a" prot="public">
          <name>GR_FILE_LONG_LONG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegr_1_1blocks_1aaf04a89b376fbc06cb75effeb40111b6acc39a9c09fab2b114ddb5ac6ec3a63f9" prot="public">
          <name>GR_FILE_FLOAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegr_1_1blocks_1aaf04a89b376fbc06cb75effeb40111b6a59bbff58dc3f23afa79642d7c9e09a14" prot="public">
          <name>GR_FILE_DOUBLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/file_meta_sink.h" line="35" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/file_meta_sink.h" bodystart="35" bodyend="44"/>
      </memberdef>
      <memberdef kind="enum" id="namespacegr_1_1blocks_1a490c2cae201320eaa480f5ec66bf376f" prot="public" static="no">
        <name>message_strobe_random_distribution_t</name>
        <enumvalue id="namespacegr_1_1blocks_1a490c2cae201320eaa480f5ec66bf376fafd7b4c1255146011421efb5239cd4c9a" prot="public">
          <name>STROBE_POISSON</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegr_1_1blocks_1a490c2cae201320eaa480f5ec66bf376fa92297cc6d3a78010bfba33969389fa21" prot="public">
          <name>STROBE_GAUSSIAN</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegr_1_1blocks_1a490c2cae201320eaa480f5ec66bf376faa0e1b65ba2c05cdef8dbb428c122e465" prot="public">
          <name>STROBE_UNIFORM</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/message_strobe_random.h" line="35" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/message_strobe_random.h" bodystart="35" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacegr_1_1blocks_1a2e0e62186a74c6671f9b6f026f16085c" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float gr::blocks::tanh_lut_table[256]</definition>
        <argsstring>[256]</argsstring>
        <name>tanh_lut_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/control_loop.h" line="273" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/control_loop.h" bodystart="273" bodyend="-1"/>
        <referencedby refid="namespacegr_1_1blocks_1aaa703e3bc0759584334326530f776a35" compoundref="control__loop_8h" startline="340" endline="350">tanhf_lut</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacegr_1_1blocks_1aa3ab382f8014358ed9a5f35d8f79f885" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char gr::blocks::METADATA_VERSION</definition>
        <argsstring></argsstring>
        <name>METADATA_VERSION</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/file_meta_sink.h" line="32" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/file_meta_sink.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegr_1_1blocks_1a9b8c10e9339bb3094d0b5fd2cf2d3f53" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t gr::blocks::METADATA_HEADER_SIZE</definition>
        <argsstring></argsstring>
        <name>METADATA_HEADER_SIZE</name>
        <initializer>= 149</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/file_meta_sink.h" line="33" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/file_meta_sink.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegr_1_1blocks_1aaa703e3bc0759584334326530f776a35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float gr::blocks::tanhf_lut</definition>
        <argsstring>(float x)</argsstring>
        <name>tanhf_lut</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A look-up table (LUT) tanh calcuation. This function returns an estimate to tanh(x) based on a 256-point LUT between -2 and<orderedlist>
<listitem><para>If x &lt; -2, it returns -1; if &gt; 2, it retursn 1.</para></listitem></orderedlist>
</para><para>This LUT form of the tanh is &quot;hidden&quot; in this code because it is likely too coarse an estimate for any real uses of a tanh. It is useful, however, in certain control loop applications where the input is expected to be within these bounds and the noise will be greater than the quanitzation of this small LUT. For more accurate forms of tanh, see volk_32f_tanh_32f. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/control_loop.h" line="340" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/control_loop.h" bodystart="340" bodyend="350"/>
        <references refid="namespacegr_1_1blocks_1a2e0e62186a74c6671f9b6f026f16085c" compoundref="control__loop_8h" startline="273">tanh_lut_table</references>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1aa2c8be0465f48ed11997af6b6764ebcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gr-blocks_2include_2gnuradio_2blocks_2api_8h_1a0bb81384d93233b7a728722dbf3d8e0a" kindref="member">BLOCKS_API</ref> unsigned int</type>
        <definition>BLOCKS_API unsigned int gr::blocks::count_bits8</definition>
        <argsstring>(unsigned int x)</argsstring>
        <name>count_bits8</name>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>return number of set bits in the low 8 bits of x </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/count_bits.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a46a6bc555ad50d9ee0c677f511adbb1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gr-blocks_2include_2gnuradio_2blocks_2api_8h_1a0bb81384d93233b7a728722dbf3d8e0a" kindref="member">BLOCKS_API</ref> unsigned int</type>
        <definition>BLOCKS_API unsigned int gr::blocks::count_bits16</definition>
        <argsstring>(unsigned int x)</argsstring>
        <name>count_bits16</name>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>return number of set bits in the low 16 bits of x </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/count_bits.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a7ebfd2060ea6defdbcbf0e9f0f1fe633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gr-blocks_2include_2gnuradio_2blocks_2api_8h_1a0bb81384d93233b7a728722dbf3d8e0a" kindref="member">BLOCKS_API</ref> unsigned int</type>
        <definition>BLOCKS_API unsigned int gr::blocks::count_bits32</definition>
        <argsstring>(unsigned int x)</argsstring>
        <name>count_bits32</name>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>return number of set bits in the low 32 bits of x </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/count_bits.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1ad70309aa4694dba4cb5c7e34205e6874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gr-blocks_2include_2gnuradio_2blocks_2api_8h_1a0bb81384d93233b7a728722dbf3d8e0a" kindref="member">BLOCKS_API</ref> unsigned int</type>
        <definition>BLOCKS_API unsigned int gr::blocks::count_bits64</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>count_bits64</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>return number of set bits in a 64-bit word </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/count_bits.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a90aa335e274388491185cc6b46b3acc5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>k</declname>
            <defname>k</defname>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>static int gr::blocks::log2_const</definition>
        <argsstring>()</argsstring>
        <name>log2_const</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="36" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a04c0e638ce6be852bf42888659d8c9ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int gr::blocks::log2_const&lt; 1 &gt;</definition>
        <argsstring>()</argsstring>
        <name>log2_const&lt; 1 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="38" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a558beaea88e774392c14a8524db2a0c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int gr::blocks::log2_const&lt; 2 &gt;</definition>
        <argsstring>()</argsstring>
        <name>log2_const&lt; 2 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="39" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a32c66271e5487b2c1e69305b1dd3c887" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int gr::blocks::log2_const&lt; 4 &gt;</definition>
        <argsstring>()</argsstring>
        <name>log2_const&lt; 4 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="40" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a182925153705fc660089f9e5198a8a6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int gr::blocks::log2_const&lt; 8 &gt;</definition>
        <argsstring>()</argsstring>
        <name>log2_const&lt; 8 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="41" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1af7d2d21e59f815585ba7bde308376cbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int gr::blocks::log2_const&lt; 16 &gt;</definition>
        <argsstring>()</argsstring>
        <name>log2_const&lt; 16 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="42" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a79e4861cb8eea7503af4951449b754bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int gr::blocks::log2_const&lt; 32 &gt;</definition>
        <argsstring>()</argsstring>
        <name>log2_const&lt; 32 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="43" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a4989a7e1b817a99cf3305751eba5b07c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int gr::blocks::log2_const&lt; 64 &gt;</definition>
        <argsstring>()</argsstring>
        <name>log2_const&lt; 64 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="44" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1abd7e00f4006ec1de4d53e64ef2e33782" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int gr::blocks::log2_const&lt; 128 &gt;</definition>
        <argsstring>()</argsstring>
        <name>log2_const&lt; 128 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="45" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a9c7dc1f89dc2dc56f3d1709725bbcbd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int gr::blocks::log2_const&lt; 256 &gt;</definition>
        <argsstring>()</argsstring>
        <name>log2_const&lt; 256 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="46" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a4677a63c0def50312710a0d65c497ae9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int gr::blocks::log2_const&lt; 512 &gt;</definition>
        <argsstring>()</argsstring>
        <name>log2_const&lt; 512 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="47" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a1eef8a90bf7b0c12e714d27f5086b45e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int gr::blocks::log2_const&lt; 1024 &gt;</definition>
        <argsstring>()</argsstring>
        <name>log2_const&lt; 1024 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" line="48" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/log2_const.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a5cad0679cffeb3c6400a125ce66fa4cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gr-blocks_2include_2gnuradio_2blocks_2api_8h_1a0bb81384d93233b7a728722dbf3d8e0a" kindref="member">BLOCKS_API</ref> bool</type>
        <definition>BLOCKS_API bool gr::blocks::wavheader_parse</definition>
        <argsstring>(FILE *fp, unsigned int &amp;sample_rate, int &amp;nchans, int &amp;bytes_per_sample, int &amp;first_sample_pos, unsigned int &amp;samples_per_chan)</argsstring>
        <name>wavheader_parse</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>sample_rate</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nchans</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>bytes_per_sample</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>first_sample_pos</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>samples_per_chan</declname>
        </param>
        <briefdescription>
<para>Read signal information from a given WAV file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>File pointer to an opened, empty file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">sample_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Stores the sample rate [S/s] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nchans</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bytes_per_sample</parametername>
</parameternamelist>
<parameterdescription>
<para>Bytes per sample, can either be 1 or 2 (corresponding o 8 or 16 bit samples, respectively) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">first_sample_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the first byte containing a sample. Use this with fseek() to jump from the end of the file to the first sample when in repeat mode. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">samples_per_chan</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples per channel </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on a successful read, false if the file could not be read or is not a valid WAV file. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/wavfile.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1ae51b4ec2c94befec3a915486431bc6ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gr-blocks_2include_2gnuradio_2blocks_2api_8h_1a0bb81384d93233b7a728722dbf3d8e0a" kindref="member">BLOCKS_API</ref> short int</type>
        <definition>BLOCKS_API short int gr::blocks::wav_read_sample</definition>
        <argsstring>(FILE *fp, int bytes_per_sample)</argsstring>
        <name>wav_read_sample</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes_per_sample</declname>
        </param>
        <briefdescription>
<para>Read one sample from an open WAV file at the current position. </para>        </briefdescription>
        <detaileddescription>
<para>Takes care of endianness. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/wavfile.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a9214aee12692e9262e4fad8013679405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gr-blocks_2include_2gnuradio_2blocks_2api_8h_1a0bb81384d93233b7a728722dbf3d8e0a" kindref="member">BLOCKS_API</ref> bool</type>
        <definition>BLOCKS_API bool gr::blocks::wavheader_write</definition>
        <argsstring>(FILE *fp, unsigned int sample_rate, int nchans, int bytes_per_sample)</argsstring>
        <name>wavheader_write</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sample_rate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nchans</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes_per_sample</declname>
        </param>
        <briefdescription>
<para>Write a valid RIFF file header. </para>        </briefdescription>
        <detaileddescription>
<para>Note: Some header values are kept blank because they&apos;re usually not known a-priori (file and chunk lengths). Use gri_wavheader_complete() to fill these in. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/wavfile.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a5ecaa6be7f3302abbfd317632101f641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gr-blocks_2include_2gnuradio_2blocks_2api_8h_1a0bb81384d93233b7a728722dbf3d8e0a" kindref="member">BLOCKS_API</ref> void</type>
        <definition>BLOCKS_API void gr::blocks::wav_write_sample</definition>
        <argsstring>(FILE *fp, short int sample, int bytes_per_sample)</argsstring>
        <name>wav_write_sample</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>short int</type>
          <declname>sample</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes_per_sample</declname>
        </param>
        <briefdescription>
<para>Write one sample to an open WAV file at the current position. </para>        </briefdescription>
        <detaileddescription>
<para>Takes care of endianness. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/wavfile.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegr_1_1blocks_1a68d316917dc45234f1e22bf2339c0c7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gr-blocks_2include_2gnuradio_2blocks_2api_8h_1a0bb81384d93233b7a728722dbf3d8e0a" kindref="member">BLOCKS_API</ref> bool</type>
        <definition>BLOCKS_API bool gr::blocks::wavheader_complete</definition>
        <argsstring>(FILE *fp, unsigned int byte_count)</argsstring>
        <name>wavheader_complete</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>byte_count</declname>
        </param>
        <briefdescription>
<para>Complete a WAV header. </para>        </briefdescription>
        <detaileddescription>
<para>Note: The stream position is changed during this function. If anything needs to be written to the WAV file after calling this function (which shouldn&apos;t happen), you need to fseek() to the end of the file (or wherever).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>File pointer to an open WAV file with a blank header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">byte_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of all samples written to the file in bytes. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-blocks/include/gnuradio/blocks/wavfile.h" line="99" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/project/prefix/src/gnuradio/build/gr-blocks/include/gnuradio/blocks/abs_ff.h" line="32" column="1"/>
  </compounddef>
</doxygen>
