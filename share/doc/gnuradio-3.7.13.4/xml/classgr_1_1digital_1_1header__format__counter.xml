<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgr_1_1digital_1_1header__format__counter" kind="class" language="C++" prot="public">
    <compoundname>gr::digital::header_format_counter</compoundname>
    <basecompoundref refid="classgr_1_1digital_1_1header__format__default" prot="public" virt="non-virtual">gr::digital::header_format_default</basecompoundref>
    <includes refid="header__format__counter_8h" local="no">gnuradio/digital/header_format_counter.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgr_1_1digital_1_1header__format__counter_1a24ad3813dc9430f19d5df3c1a4a2f970" prot="protected" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t gr::digital::header_format_counter::d_counter</definition>
        <argsstring></argsstring>
        <name>d_counter</name>
        <briefdescription>
<para>keeps track of the number of packets transmitted </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-digital/include/gnuradio/digital/header_format_counter.h" line="114" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-digital/include/gnuradio/digital/header_format_counter.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1digital_1_1header__format__counter_1afe97a50bd376ae2f2fa1cd0bb15e4ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr::digital::header_format_counter::header_format_counter</definition>
        <argsstring>(const std::string &amp;access_code, int threshold, int bps)</argsstring>
        <name>header_format_counter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>access_code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-digital/include/gnuradio/digital/header_format_counter.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1digital_1_1header__format__counter_1a7a3c0413e251696cfae2d2f3fa85b91f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual gr::digital::header_format_counter::~header_format_counter</definition>
        <argsstring>()</argsstring>
        <name>~header_format_counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-digital/include/gnuradio/digital/header_format_counter.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1digital_1_1header__format__counter_1ad007a2f99cc378a43e8b9f487c827cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool gr::digital::header_format_counter::format</definition>
        <argsstring>(int nbytes_in, const unsigned char *input, pmt::pmt_t &amp;output, pmt::pmt_t &amp;info)</argsstring>
        <name>format</name>
        <reimplements refid="classgr_1_1digital_1_1header__format__default_1a2aab317253c30524d129f7a6c084432d">format</reimplements>
        <param>
          <type>int</type>
          <declname>nbytes_in</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt::pmt_t</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a header from the access code and packet length to build an output packet in the form:</para><para><verbatim>  | access code | pkt len | pkt len | bps | counter |
</verbatim></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nbytes_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The length (in bytes) of the <computeroutput>input</computeroutput> payload </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of unsigned chars of the packet payload </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>A pmt::u8vector with the new header prepended onto the input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>A pmt::dict containing meta data and info about the PDU (generally from the metadata portion of the input PDU). Data can be extracted from this for the header formatting or inserted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-digital/include/gnuradio/digital/header_format_counter.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1digital_1_1header__format__counter_1af2ebdcb1b223e97f3d9a081ddc9613fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t gr::digital::header_format_counter::header_nbits</definition>
        <argsstring>() const </argsstring>
        <name>header_nbits</name>
        <reimplements refid="classgr_1_1digital_1_1header__format__default_1a4cc92b75fc8c766c0240989d6dcdd983">header_nbits</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the length of the formatted header in bits. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-digital/include/gnuradio/digital/header_format_counter.h" line="95" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1digital_1_1header__format__counter_1af49d56bcabfe33dfdb2943ad8e8b59ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1digital_1_1header__format__base_1a5c51fe5ff7b1e8bf3f5169b388ab771b" kindref="member">sptr</ref></type>
        <definition>static sptr gr::digital::header_format_counter::make</definition>
        <argsstring>(const std::string &amp;access_code, int threshold, int bps)</argsstring>
        <name>make</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>access_code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Factory to create an async packet header formatter; returns an sptr to the object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>access_code</parametername>
</parameternamelist>
<parameterdescription>
<para>An access code that is used to find and synchronize the start of a packet. Used in the parser and in other blocks like a corr_est block that helps trigger the receiver. Can be up to 64-bits long. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>How many bits can be wrong in the access code and still count as correct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bps</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bits/second used in the payload&apos;s modulator. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-digital/include/gnuradio/digital/header_format_counter.h" line="110" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgr_1_1digital_1_1header__format__counter_1a53f6e8e2c37a90a00606d3c44a36dd92" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool gr::digital::header_format_counter::header_ok</definition>
        <argsstring>()</argsstring>
        <name>header_ok</name>
        <reimplements refid="classgr_1_1digital_1_1header__format__default_1a4ec381bc1d438a9d0bb7fc082bd7a1f9">header_ok</reimplements>
        <briefdescription>
<para>Verify that the header is valid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-digital/include/gnuradio/digital/header_format_counter.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1digital_1_1header__format__counter_1a6d288a5a096bf434267b0c3500f07b33" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int gr::digital::header_format_counter::header_payload</definition>
        <argsstring>()</argsstring>
        <name>header_payload</name>
        <reimplements refid="classgr_1_1digital_1_1header__format__default_1adca94d03e79f529e86c48617058a50f3">header_payload</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get info from the header; return payload length and package rest of data in d_info dictionary.</para><para>Extracts the header of the form:</para><para><verbatim>  | access code | pkt len | pkt len | bps | counter | payload |
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-digital/include/gnuradio/digital/header_format_counter.h" line="128" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header formatter that adds the payload bits/symbol format and a packet number counter. </para>    </briefdescription>
    <detaileddescription>
<para>Child class of <ref refid="classgr_1_1digital_1_1header__format__default" kindref="compound">header_format_default</ref>. This version adds two fields to the header:</para><para><itemizedlist>
<listitem><para>bps (16 bits): bits/symbol used when modulating the payload. </para></listitem>
<listitem><para>count (16 bits): a counter for the packet number.</para></listitem>
</itemizedlist>
Like the default packet formatter, the length is encoded as a 16-bit value repeated twice. The full packet looks like: <verbatim>  | access code | hdr | payload |
</verbatim></para><para>Where the access code is &lt;= 64 bits and hdr is: <verbatim>  |  0 -- 15 | 16 -- 31 |
  | pkt len  | pkt len  |
  | bits/sym | counter  |
</verbatim></para><para>The access code and header are formatted for network byte order.</para><para><simplesect kind="see"><para><ref refid="classgr_1_1digital_1_1header__format__default" kindref="compound">header_format_default</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7125">
        <label>boost::enable_shared_from_this&lt; gr::digital::header_format_base &gt;</label>
      </node>
      <node id="7122">
        <label>gr::digital::header_format_counter</label>
        <link refid="classgr_1_1digital_1_1header__format__counter"/>
        <childnode refid="7123" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7124">
        <label>gr::digital::header_format_base</label>
        <link refid="classgr_1_1digital_1_1header__format__base"/>
        <childnode refid="7125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7123">
        <label>gr::digital::header_format_default</label>
        <link refid="classgr_1_1digital_1_1header__format__default"/>
        <childnode refid="7124" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7129">
        <label>boost::enable_shared_from_this&lt; gr::digital::header_format_base &gt;</label>
      </node>
      <node id="7126">
        <label>gr::digital::header_format_counter</label>
        <link refid="classgr_1_1digital_1_1header__format__counter"/>
        <childnode refid="7127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7130">
        <label>gr::digital::header_buffer</label>
        <link refid="classgr_1_1digital_1_1header__buffer"/>
      </node>
      <node id="7128">
        <label>gr::digital::header_format_base</label>
        <link refid="classgr_1_1digital_1_1header__format__base"/>
        <childnode refid="7129" relation="public-inheritance">
        </childnode>
        <childnode refid="7130" relation="usage">
          <edgelabel>d_hdr_reg</edgelabel>
        </childnode>
      </node>
      <node id="7127">
        <label>gr::digital::header_format_default</label>
        <link refid="classgr_1_1digital_1_1header__format__default"/>
        <childnode refid="7128" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/project/prefix/src/gnuradio/gr-digital/include/gnuradio/digital/header_format_counter.h" line="64" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-digital/include/gnuradio/digital/header_format_counter.h" bodystart="62" bodyend="129"/>
    <listofallmembers>
      <member refid="classgr_1_1digital_1_1header__format__default_1afa0986a013a2fab20ba05830dfa02f90" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>access_code</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1a5a7b2939707146f2b28d7e91e04103c2" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>base</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1ae6a83f256705b2dcd0f7da972cfc8f53" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_access_code</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1a106909b7bc602d0e33102193d8a7de63" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_access_code_len</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1a2e1a41342ea34aece31bfb536d72b8fb" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_bps</name></member>
      <member refid="classgr_1_1digital_1_1header__format__counter_1a24ad3813dc9430f19d5df3c1a4a2f970" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_counter</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1ab1d05edf242fd4f9afc33b7dfde8f8b2" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_data_reg</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1a0b9d68d2bbe2150a467a1b033c94f0f3" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_debug_logger</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1a215bc24b277bb10c79308fdf1503e40e" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_hdr_reg</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1a07a45e28050b53bb8f49e7e6e3c82399" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_info</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1a1dbf3bde87823470f48819db89e132d5" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_logger</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1a80c95f810309c1c2c002c13c7bf09014" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_mask</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1a3b28410d6baab5fd8e626bbe35cde44c" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_nbits</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1af024044a5b4a6a43d0975eae00327124" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_pkt_count</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1abc8c47c589bf728f8521fe72077b371a" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_pkt_len</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1a68188f0d090ed7714601cecfa9db8a50" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_state</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1ac433e0b39ded27be1761acbf6bd3b27c" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>d_threshold</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1a421ae7ce17a864b9aa02b4ac2929ea81" prot="protected" virt="virtual"><scope>gr::digital::header_format_counter</scope><name>enter_have_header</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1a4d9f6a5b3ccff4af4ef8ca346667d4c5" prot="protected" virt="virtual"><scope>gr::digital::header_format_counter</scope><name>enter_have_sync</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1aa3e7d6bb51dab765439a53123da36061" prot="protected" virt="virtual"><scope>gr::digital::header_format_counter</scope><name>enter_search</name></member>
      <member refid="classgr_1_1digital_1_1header__format__counter_1ad007a2f99cc378a43e8b9f487c827cf9" prot="public" virt="virtual"><scope>gr::digital::header_format_counter</scope><name>format</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1aba944a279dc29a7ec716f9a7cc36348b" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>formatter</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1ac0504f677b7506f9acc2b204f8fbea75" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>header_format_base</name></member>
      <member refid="classgr_1_1digital_1_1header__format__counter_1afe97a50bd376ae2f2fa1cd0bb15e4ad8" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>header_format_counter</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1af3973a7899b82cd59dde82c0fae9351e" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>header_format_default</name></member>
      <member refid="classgr_1_1digital_1_1header__format__counter_1af2ebdcb1b223e97f3d9a081ddc9613fd" prot="public" virt="virtual"><scope>gr::digital::header_format_counter</scope><name>header_nbits</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1a62bfba430c097b94db6d9a55e581b04b" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>header_nbytes</name></member>
      <member refid="classgr_1_1digital_1_1header__format__counter_1a53f6e8e2c37a90a00606d3c44a36dd92" prot="protected" virt="virtual"><scope>gr::digital::header_format_counter</scope><name>header_ok</name></member>
      <member refid="classgr_1_1digital_1_1header__format__counter_1a6d288a5a096bf434267b0c3500f07b33" prot="protected" virt="virtual"><scope>gr::digital::header_format_counter</scope><name>header_payload</name></member>
      <member refid="classgr_1_1digital_1_1header__format__counter_1af49d56bcabfe33dfdb2943ad8e8b59ee" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>make</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1a316832ee7e96720547956c0ae889aba7" prot="public" virt="virtual"><scope>gr::digital::header_format_counter</scope><name>parse</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1af5c71fef195772a38c94299d4e280ee0" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>set_access_code</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1a8a21951e500dcb3c0fd1875f9d7dcad4" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>set_threshold</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1a5c51fe5ff7b1e8bf3f5169b388ab771b" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>sptr</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1a75e1a71f4ae157073a8430dcf247a84caea34dac0667ecb2b45a3984073e237d1" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>STATE_HAVE_SYNC</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1a75e1a71f4ae157073a8430dcf247a84ca16dfc49f94e86da45f2ee72a6fd5545d" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>STATE_SYNC_SEARCH</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1a75e1a71f4ae157073a8430dcf247a84c" prot="protected" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>state_t</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1a647b1224cd6dcb95e257344c8ed0e7aa" prot="public" virt="non-virtual"><scope>gr::digital::header_format_counter</scope><name>threshold</name></member>
      <member refid="classgr_1_1digital_1_1header__format__base_1ab47c2e30885850d805a9854345b630f5" prot="public" virt="virtual"><scope>gr::digital::header_format_counter</scope><name>~header_format_base</name></member>
      <member refid="classgr_1_1digital_1_1header__format__counter_1a7a3c0413e251696cfae2d2f3fa85b91f" prot="public" virt="virtual"><scope>gr::digital::header_format_counter</scope><name>~header_format_counter</name></member>
      <member refid="classgr_1_1digital_1_1header__format__default_1a9448806c2e41d16657336f122ee4f78d" prot="public" virt="virtual"><scope>gr::digital::header_format_counter</scope><name>~header_format_default</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
