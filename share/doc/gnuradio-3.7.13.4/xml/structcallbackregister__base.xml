<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structcallbackregister__base" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>callbackregister_base</compoundname>
    <derivedcompoundref refid="classrpcserver__base" prot="public" virt="virtual">rpcserver_base</derivedcompoundref>
    <includes refid="rpccallbackregister__base_8h" local="no">gnuradio/rpccallbackregister_base.h</includes>
    <innerclass refid="structcallbackregister__base_1_1callback__base__t" prot="public">callbackregister_base::callback_base_t</innerclass>
    <innerclass refid="classcallbackregister__base_1_1callback__t" prot="public">callbackregister_base::callback_t</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structcallbackregister__base_1aaa5da700159ea9432baf044f1bd3786f" prot="public" static="no">
        <type><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callback_t</ref>&lt; <ref refid="classgr_1_1messages_1_1msg__accepter" kindref="compound">gr::messages::msg_accepter</ref>, gr::messages::msg_accepter_sptr &gt;</type>
        <definition>typedef callback_t&lt;gr::messages::msg_accepter, gr::messages::msg_accepter_sptr&gt; callbackregister_base::configureCallback_t</definition>
        <argsstring></argsstring>
        <name>configureCallback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="100" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcallbackregister__base_1a26829e86a28d11055814ee1a6bb1f90c" prot="public" static="no">
        <type><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callback_t</ref>&lt; <ref refid="classgr_1_1messages_1_1msg__producer" kindref="compound">gr::messages::msg_producer</ref>, gr::messages::msg_producer_sptr &gt;</type>
        <definition>typedef callback_t&lt;gr::messages::msg_producer, gr::messages::msg_producer_sptr&gt; callbackregister_base::queryCallback_t</definition>
        <argsstring></argsstring>
        <name>queryCallback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="101" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structcallbackregister__base_1a7fdd2153b194fc4c0d0754613af5fda7" prot="public" static="no">
        <type><ref refid="classcallbackregister__base_1_1callback__t" kindref="compound">callback_t</ref>&lt; <ref refid="classgr_1_1messages_1_1msg__accepter" kindref="compound">gr::messages::msg_accepter</ref>, gr::messages::msg_accepter_sptr &gt;</type>
        <definition>typedef callback_t&lt;gr::messages::msg_accepter, gr::messages::msg_accepter_sptr&gt; callbackregister_base::handlerCallback_t</definition>
        <argsstring></argsstring>
        <name>handlerCallback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="102" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structcallbackregister__base_1a4c05d278727594bdf05d222c567b38bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>callbackregister_base::callbackregister_base</definition>
        <argsstring>()</argsstring>
        <name>callbackregister_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="104" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1a574cc1d427024846ee5db738be7a0262" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual callbackregister_base::~callbackregister_base</definition>
        <argsstring>()</argsstring>
        <name>~callbackregister_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="105" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="105" bodyend="105"/>
        <references refid="structcallbackregister__base_1ac6d504cd5a1cb82455757c8711b42017">registerConfigureCallback</references>
        <references refid="structcallbackregister__base_1a0f6c43c658d74fa922728137370e3f5b">registerHandlerCallback</references>
        <references refid="structcallbackregister__base_1a969518669759cfbefdc9f29d8c6b2153">registerQueryCallback</references>
        <references refid="structcallbackregister__base_1a4df3061020ce40966b5cfe84802b4b7b">unregisterConfigureCallback</references>
        <references refid="structcallbackregister__base_1acb8e57ef770a6901c34ad237c807646b">unregisterHandlerCallback</references>
        <references refid="structcallbackregister__base_1a6c089e0bfb1de755e0a6dcb09938fc38">unregisterQueryCallback</references>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1ac6d504cd5a1cb82455757c8711b42017" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::registerConfigureCallback</definition>
        <argsstring>(const std::string &amp;id, const configureCallback_t callback)=0</argsstring>
        <name>registerConfigureCallback</name>
        <reimplementedby refid="classrpcserver__base_1a07ca2bf9c26f30cb9d63df1d8cc19f8a">registerConfigureCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1a55e13fd15a44332d64b223b904b8fcc7">registerConfigureCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="structcallbackregister__base_1aaa5da700159ea9432baf044f1bd3786f" kindref="member">configureCallback_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="107" column="1"/>
        <referencedby refid="structcallbackregister__base_1a574cc1d427024846ee5db738be7a0262" compoundref="rpccallbackregister__base_8h" startline="105" endline="105">~callbackregister_base</referencedby>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1a4df3061020ce40966b5cfe84802b4b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::unregisterConfigureCallback</definition>
        <argsstring>(const std::string &amp;id)=0</argsstring>
        <name>unregisterConfigureCallback</name>
        <reimplementedby refid="classrpcserver__base_1aa46ef83c3bc01bf297fb02487d2b6a62">unregisterConfigureCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1ae766b2e9f906adeafa6c03978ba9ab3b">unregisterConfigureCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__thrift_1aee8e18dfd4e2bc180706b97a6a0445b3">unregisterConfigureCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="108" column="1"/>
        <referencedby refid="structcallbackregister__base_1a574cc1d427024846ee5db738be7a0262" compoundref="rpccallbackregister__base_8h" startline="105" endline="105">~callbackregister_base</referencedby>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1a969518669759cfbefdc9f29d8c6b2153" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::registerQueryCallback</definition>
        <argsstring>(const std::string &amp;id, const queryCallback_t callback)=0</argsstring>
        <name>registerQueryCallback</name>
        <reimplementedby refid="classrpcserver__base_1aaf6f4bda26c5b56965f919899deea6e6">registerQueryCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1a0989d54adcc1dcda8c59f234e2104808">registerQueryCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="structcallbackregister__base_1a26829e86a28d11055814ee1a6bb1f90c" kindref="member">queryCallback_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="109" column="1"/>
        <referencedby refid="structcallbackregister__base_1a574cc1d427024846ee5db738be7a0262" compoundref="rpccallbackregister__base_8h" startline="105" endline="105">~callbackregister_base</referencedby>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1a6c089e0bfb1de755e0a6dcb09938fc38" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::unregisterQueryCallback</definition>
        <argsstring>(const std::string &amp;id)=0</argsstring>
        <name>unregisterQueryCallback</name>
        <reimplementedby refid="classrpcserver__base_1a390b7472ad2fa8add90199b5957360e6">unregisterQueryCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1aa4b578dde95f0e0dbc44b11949487e25">unregisterQueryCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__thrift_1a051fd62e542584013a6d149b1b315e10">unregisterQueryCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="110" column="1"/>
        <referencedby refid="structcallbackregister__base_1a574cc1d427024846ee5db738be7a0262" compoundref="rpccallbackregister__base_8h" startline="105" endline="105">~callbackregister_base</referencedby>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1a0f6c43c658d74fa922728137370e3f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::registerHandlerCallback</definition>
        <argsstring>(const std::string &amp;id, const handlerCallback_t callback)=0</argsstring>
        <name>registerHandlerCallback</name>
        <reimplementedby refid="classrpcserver__base_1a97563a53bad9afcbf8a4f7fba8840be7">registerHandlerCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1ae195829688bcc8b8ffcc4182ed9839b8">registerHandlerCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__thrift_1aee57799a54b121e6b6062257d20af5a3">registerHandlerCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="structcallbackregister__base_1a7fdd2153b194fc4c0d0754613af5fda7" kindref="member">handlerCallback_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="111" column="1"/>
        <referencedby refid="structcallbackregister__base_1a574cc1d427024846ee5db738be7a0262" compoundref="rpccallbackregister__base_8h" startline="105" endline="105">~callbackregister_base</referencedby>
      </memberdef>
      <memberdef kind="function" id="structcallbackregister__base_1acb8e57ef770a6901c34ad237c807646b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void callbackregister_base::unregisterHandlerCallback</definition>
        <argsstring>(const std::string &amp;id)=0</argsstring>
        <name>unregisterHandlerCallback</name>
        <reimplementedby refid="classrpcserver__base_1a7f0289279ec39bd6096b3964a822f4d0">unregisterHandlerCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__aggregator_1aa1c0e4db6a8cba0791f9f1e5bd902172">unregisterHandlerCallback</reimplementedby>
        <reimplementedby refid="classrpcserver__thrift_1adfcc93ca73bd5b0b06583ac4b816e90e">unregisterHandlerCallback</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="112" column="1"/>
        <referencedby refid="structcallbackregister__base_1a574cc1d427024846ee5db738be7a0262" compoundref="rpccallbackregister__base_8h" startline="105" endline="105">~callbackregister_base</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2962">
        <label>rpcserver_aggregator</label>
        <link refid="classrpcserver__aggregator"/>
        <childnode refid="2961" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2961">
        <label>rpcserver_base</label>
        <link refid="classrpcserver__base"/>
        <childnode refid="2960" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2960">
        <label>callbackregister_base</label>
        <link refid="structcallbackregister__base"/>
      </node>
      <node id="2963">
        <label>rpcserver_thrift</label>
        <link refid="classrpcserver__thrift"/>
        <childnode refid="2961" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" line="61" column="1" bodyfile="/home/project/prefix/src/gnuradio/gnuradio-runtime/include/gnuradio/rpccallbackregister_base.h" bodystart="60" bodyend="113"/>
    <listofallmembers>
      <member refid="structcallbackregister__base_1a4c05d278727594bdf05d222c567b38bf" prot="public" virt="non-virtual"><scope>callbackregister_base</scope><name>callbackregister_base</name></member>
      <member refid="structcallbackregister__base_1aaa5da700159ea9432baf044f1bd3786f" prot="public" virt="non-virtual"><scope>callbackregister_base</scope><name>configureCallback_t</name></member>
      <member refid="structcallbackregister__base_1a7fdd2153b194fc4c0d0754613af5fda7" prot="public" virt="non-virtual"><scope>callbackregister_base</scope><name>handlerCallback_t</name></member>
      <member refid="structcallbackregister__base_1a26829e86a28d11055814ee1a6bb1f90c" prot="public" virt="non-virtual"><scope>callbackregister_base</scope><name>queryCallback_t</name></member>
      <member refid="structcallbackregister__base_1ac6d504cd5a1cb82455757c8711b42017" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>registerConfigureCallback</name></member>
      <member refid="structcallbackregister__base_1a0f6c43c658d74fa922728137370e3f5b" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>registerHandlerCallback</name></member>
      <member refid="structcallbackregister__base_1a969518669759cfbefdc9f29d8c6b2153" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>registerQueryCallback</name></member>
      <member refid="structcallbackregister__base_1a4df3061020ce40966b5cfe84802b4b7b" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>unregisterConfigureCallback</name></member>
      <member refid="structcallbackregister__base_1acb8e57ef770a6901c34ad237c807646b" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>unregisterHandlerCallback</name></member>
      <member refid="structcallbackregister__base_1a6c089e0bfb1de755e0a6dcb09938fc38" prot="public" virt="pure-virtual"><scope>callbackregister_base</scope><name>unregisterQueryCallback</name></member>
      <member refid="structcallbackregister__base_1a574cc1d427024846ee5db738be7a0262" prot="public" virt="virtual"><scope>callbackregister_base</scope><name>~callbackregister_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
