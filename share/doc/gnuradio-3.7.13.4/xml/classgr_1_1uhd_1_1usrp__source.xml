<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgr_1_1uhd_1_1usrp__source" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>gr::uhd::usrp_source</compoundname>
    <basecompoundref refid="classgr_1_1uhd_1_1usrp__block" prot="public" virt="virtual">gr::uhd::usrp_block</basecompoundref>
    <includes refid="usrp__source_8h" local="no">gnuradio/uhd/usrp_source.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1uhd_1_1usrp__source_1addc61a8e14fef64c22a02c2597d0d10d" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1uhd_1_1usrp__source" kindref="compound">usrp_source</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;usrp_source&gt; gr::uhd::usrp_source::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="83" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="group__uhd__blk_1gacdac77bf10ba114f6fc3ae264e1c879f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1uhd_1_1usrp__source_1addc61a8e14fef64c22a02c2597d0d10d" kindref="member">sptr</ref></type>
        <definition>static sptr gr::uhd::usrp_source::make</definition>
        <argsstring>(const ::uhd::device_addr_t &amp;device_addr, const ::uhd::io_type_t &amp;io_type, size_t num_channels)</argsstring>
        <name>make</name>
        <param>
          <type>const ::uhd::device_addr_t &amp;</type>
          <declname>device_addr</declname>
        </param>
        <param>
          <type>const ::uhd::io_type_t &amp;</type>
          <declname>io_type</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_channels</declname>
        </param>
        <briefdescription>
<para>DEPRECATED Make a new USRP source block using the deprecated io_type_t.</para><para>This function will be removed in the future. Please use the other make function, gr::uhd::make(const ::uhd::device_addr_t, const ::uhd::stream_args_t, const std::string). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a11355ef67e41574d34bad8cd5710af9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1uhd_1_1usrp__source_1addc61a8e14fef64c22a02c2597d0d10d" kindref="member">sptr</ref></type>
        <definition>static sptr gr::uhd::usrp_source::make</definition>
        <argsstring>(const ::uhd::device_addr_t &amp;device_addr, const ::uhd::stream_args_t &amp;stream_args, const bool issue_stream_cmd_on_start=true)</argsstring>
        <name>make</name>
        <param>
          <type>const ::uhd::device_addr_t &amp;</type>
          <declname>device_addr</declname>
        </param>
        <param>
          <type>const ::<ref refid="structuhd_1_1stream__args__t" kindref="compound">uhd::stream_args_t</ref> &amp;</type>
          <declname>stream_args</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>issue_stream_cmd_on_start</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>the address to identify the hardware </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_args</parametername>
</parameternamelist>
<parameterdescription>
<para>the IO format and channel specification </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>issue_stream_cmd_on_start</parametername>
</parameternamelist>
<parameterdescription>
<para>enable or disable continuous streaming when flowgraph starts (default true) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new USRP source block object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="103" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a810c34ba21faa4528c838b1c37a2b83b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::uhd::usrp_source::set_start_time</definition>
        <argsstring>(const ::uhd::time_spec_t &amp;time)=0</argsstring>
        <name>set_start_time</name>
        <param>
          <type>const ::uhd::time_spec_t &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the start time for incoming samples. To control when samples are received, set this value before starting the flow graph. The value is cleared after each run. When not specified, the start time will be:<itemizedlist>
<listitem><para>Immediately for the one channel case</para></listitem><listitem><para>in the near future for multi-channel</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>the absolute time for reception to begin </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a357b19bd17d21fc68659b6eabdd5c195" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::uhd::usrp_source::issue_stream_cmd</definition>
        <argsstring>(const ::uhd::stream_cmd_t &amp;cmd)=0</argsstring>
        <name>issue_stream_cmd</name>
        <param>
          <type>const ::uhd::stream_cmd_t &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><emphasis>Advanced use only:</emphasis> Issue a stream command to all channels in this source block.</para><para>This method is intended to override the default &quot;always on&quot; behavior. After starting the flow graph, the user should call <ref refid="classgr_1_1block_1a0863bc16f7c84adf4cddf5d53124450e" kindref="member">stop()</ref> on this block, then issue any desired arbitrary stream_cmd_t structs to the device. The USRP will be able to enqueue several stream commands in the FPGA.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>the stream command to issue to all source channels </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a4adf629512e551d1cc360a83e3667f51" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::uhd::usrp_source::set_recv_timeout</definition>
        <argsstring>(const double timeout, const bool one_packet=true)=0</argsstring>
        <name>set_recv_timeout</name>
        <param>
          <type>const double</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>one_packet</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure the timeout value on the UHD recv() call</para><para>This is an advanced use parameter. Changing the timeout value affects the latency of this block; a high timeout value can be more optimal for high-throughput applications (e.g., 1 second) and setting it to zero will have the best latency. Changing the timeout value may also be useful for custom FPGA modifications, where traffic might not be continuously streaming. For specialized high-performance use cases, twiddling these knobs may improve performance, but changes are not generally applicable.</para><para>Note that UHD&apos;s recv() call may block until the timeout is over, which means this block might also block for up to the timeout value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout parameter in seconds. Cf. the UHD manual for uhd::rx_streamer::recv() for more details. A lower value will mean lower latency, but higher CPU load. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>one_packet</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, only receive one packet at a time. Cf. the UHD manual for uhd::rx_streamer::recv() for more details. A value of true will mean lower latency, but higher CPU load. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a00f27ceb6665d837c09d59f8beb4663c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>::uhd::dict&lt; std::string, std::string &gt;</type>
        <definition>virtual ::uhd::dict&lt;std::string, std::string&gt; gr::uhd::usrp_source::get_usrp_info</definition>
        <argsstring>(size_t chan=0)=0</argsstring>
        <name>get_usrp_info</name>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns identifying information about this USRP&apos;s configuration. Returns motherboard ID, name, and serial. Returns daughterboard RX ID, subdev name and spec, serial, and antenna. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RX info </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a62187066bd946e4f88eadbc0ade2dd00" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>virtual std::vector&lt;std::string&gt; gr::uhd::usrp_source::get_lo_names</definition>
        <argsstring>(size_t chan=0)=0</argsstring>
        <name>get_lo_names</name>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a list of possible LO stage names <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of strings for possible LO names </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1ae24f390fef2a0692dc230a5284ad1002" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::uhd::usrp_source::set_lo_source</definition>
        <argsstring>(const std::string &amp;src, const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>set_lo_source</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the LO source for the usrp device. For usrps that support selectable LOs, this function allows switching between them. Typical options for source: internal, external. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>a string representing the LO source </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the LO stage to update </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a390536679c895fc74b153a927c02f32f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::string</type>
        <definition>virtual const std::string gr::uhd::usrp_source::get_lo_source</definition>
        <argsstring>(const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>get_lo_source</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the currently set LO source. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the LO stage to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the configured LO source </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a6d74e2ad35f036b8d81613ee243d31f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>virtual std::vector&lt;std::string&gt; gr::uhd::usrp_source::get_lo_sources</definition>
        <argsstring>(const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>get_lo_sources</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a list of possible LO sources. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the LO stage to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of strings for possible settings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a2e1684ad3b49b969d3ee5319b210ef12" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::uhd::usrp_source::set_lo_export_enabled</definition>
        <argsstring>(bool enabled, const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>set_lo_export_enabled</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set whether the LO used by the usrp device is exported For usrps that support exportable LOs, this function configures if the LO used by chan is exported or not. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>if true then export the LO </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the LO stage to update </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 for the source channel </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a6c8a83506392847457c4f8e45a5ad982" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool gr::uhd::usrp_source::get_lo_export_enabled</definition>
        <argsstring>(const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>get_lo_export_enabled</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the currently selected LO is being exported. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the LO stage to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a9d68f6c955bbcc764fbdc5d46a9e19bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double gr::uhd::usrp_source::set_lo_freq</definition>
        <argsstring>(double freq, const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>set_lo_freq</name>
        <param>
          <type>double</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the RX LO frequency (Advanced). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>freq</parametername>
</parameternamelist>
<parameterdescription>
<para>the frequency to set the LO to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the LO stage to update </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a coerced LO frequency </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1ad35db4d25ed80a730224a8d339391351" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double gr::uhd::usrp_source::get_lo_freq</definition>
        <argsstring>(const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>get_lo_freq</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current RX LO frequency (Advanced). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the LO stage to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the configured LO frequency </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a1dfb1260a0bc54d9e249e8a000d5d080" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>::uhd::freq_range_t</type>
        <definition>virtual ::uhd::freq_range_t gr::uhd::usrp_source::get_lo_freq_range</definition>
        <argsstring>(const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>get_lo_freq_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the LO frequency range of the RX LO. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the LO stage to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a frequency range object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1adb62a194b0b0761c6a0b4c8c808a20b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::uhd::usrp_source::set_auto_dc_offset</definition>
        <argsstring>(const bool enb, size_t chan=0)=0</argsstring>
        <name>set_auto_dc_offset</name>
        <param>
          <type>const bool</type>
          <declname>enb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/disable the automatic DC offset correction. The automatic correction subtracts out the long-run average.</para><para>When disabled, the averaging option operation is halted. Once halted, the average value will be held constant until the user re-enables the automatic correction or overrides the value by manually setting the offset.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enb</parametername>
</parameternamelist>
<parameterdescription>
<para>true to enable automatic DC offset correction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1ae3a31eb295e486c17c9e3d4b051e2ba8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::uhd::usrp_source::set_dc_offset</definition>
        <argsstring>(const std::complex&lt; double &gt; &amp;offset, size_t chan=0)=0</argsstring>
        <name>set_dc_offset</name>
        <param>
          <type>const std::complex&lt; double &gt; &amp;</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a constant DC offset value. The value is complex to control both I and Q. Only set this when automatic correction is disabled. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>the dc offset (1.0 is full-scale) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a0ba796d69a9c020fde92bbab40664236" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::uhd::usrp_source::set_auto_iq_balance</definition>
        <argsstring>(const bool enb, size_t chan=0)=0</argsstring>
        <name>set_auto_iq_balance</name>
        <param>
          <type>const bool</type>
          <declname>enb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/Disable the RX frontend IQ imbalance correction.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enb</parametername>
</parameternamelist>
<parameterdescription>
<para>true to enable automatic IQ imbalance correction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1abd1b40db06b33980dfc9c238b759a1e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::uhd::usrp_source::set_iq_balance</definition>
        <argsstring>(const std::complex&lt; double &gt; &amp;correction, size_t chan=0)=0</argsstring>
        <name>set_iq_balance</name>
        <param>
          <type>const std::complex&lt; double &gt; &amp;</type>
          <declname>correction</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the RX frontend IQ imbalance correction. Use this to adjust the magnitude and phase of I and Q.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>correction</parametername>
</parameternamelist>
<parameterdescription>
<para>the complex correction value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1a5bcd12598dafafc7800270704713cc46" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::complex&lt; float &gt; &gt;</type>
        <definition>virtual std::vector&lt;std::complex&lt;float&gt; &gt; gr::uhd::usrp_source::finite_acquisition</definition>
        <argsstring>(const size_t nsamps)=0</argsstring>
        <name>finite_acquisition</name>
        <param>
          <type>const size_t</type>
          <declname>nsamps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function for finite data acquisition. This is not to be used with the scheduler; rather, one can request samples from the USRP in python. //TODO assumes fc32 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nsamps</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of samples </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of complex float samples </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1uhd_1_1usrp__source_1aee684d444b362ba4cc5847ded529f05a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::vector&lt; std::complex&lt; float &gt; &gt; &gt;</type>
        <definition>virtual std::vector&lt;std::vector&lt;std::complex&lt;float&gt; &gt; &gt; gr::uhd::usrp_source::finite_acquisition_v</definition>
        <argsstring>(const size_t nsamps)=0</argsstring>
        <name>finite_acquisition_v</name>
        <param>
          <type>const size_t</type>
          <declname>nsamps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function for finite data acquisition. This is the multi-channel version of finite_acquisition; This is not to be used with the scheduler; rather, one can request samples from the USRP in python. //TODO assumes fc32 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nsamps</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of samples per channel </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of buffers, where each buffer represents a channel </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="309" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>USRP Source <ndash/> Radio Receiver</para><para>The USRP source block receives samples and writes to a stream. The source block also provides API calls for receiver settings. See also <ref refid="classgr_1_1uhd_1_1usrp__block" kindref="compound">gr::uhd::usrp_block</ref> for more public API calls.</para><para>RX Stream tagging:</para><para>The following tag keys will be produced by the work function:<itemizedlist>
<listitem><para><ref refid="namespacepmt_1a011a23aa4f257dbd672d9d5220b1a5dd" kindref="member">pmt::string_to_symbol</ref>(&quot;rx_time&quot;)</para></listitem></itemizedlist>
</para><para>The timestamp tag value is a pmt tuple of the following: (uint64 seconds, and double fractional seconds). A timestamp tag is produced at <ref refid="classgr_1_1block_1a7f58745d1374b30a7b866406dc97850f" kindref="member">start()</ref> and after overflows.</para><sect1 id="classgr_1_1uhd_1_1usrp__source_1uhd_rx_command_iface">
<title>Command interface</title>
<para>This block has a message port, which consumes UHD PMT commands. For a description of the command syntax, see Section <ref refid="page_uhd_1uhd_command_syntax" kindref="member">Command Syntax</ref>.</para><para>For a more general description of the gr-uhd components, see <ref refid="page_uhd" kindref="compound">UHD Interface</ref>. </para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="16087">
        <label>gr::msg_accepter</label>
        <link refid="classgr_1_1msg__accepter"/>
        <childnode refid="16088" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16084">
        <label>gr::sync_block</label>
        <link refid="classgr_1_1sync__block"/>
        <childnode refid="16085" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16086">
        <label>gr::basic_block</label>
        <link refid="classgr_1_1basic__block"/>
        <childnode refid="16087" relation="public-inheritance">
        </childnode>
        <childnode refid="16089" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16082">
        <label>gr::uhd::usrp_source</label>
        <link refid="classgr_1_1uhd_1_1usrp__source"/>
        <childnode refid="16083" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16088">
        <label>gr::messages::msg_accepter</label>
        <link refid="classgr_1_1messages_1_1msg__accepter"/>
      </node>
      <node id="16083">
        <label>gr::uhd::usrp_block</label>
        <link refid="classgr_1_1uhd_1_1usrp__block"/>
        <childnode refid="16084" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16085">
        <label>gr::block</label>
        <link refid="classgr_1_1block"/>
        <childnode refid="16086" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16089">
        <label>boost::enable_shared_from_this&lt; basic_block &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="16095">
        <label>gr::msg_accepter</label>
        <link refid="classgr_1_1msg__accepter"/>
        <childnode refid="16096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16099">
        <label>std::deque&lt; pmt::pmt_t &gt;</label>
      </node>
      <node id="16092">
        <label>gr::sync_block</label>
        <link refid="classgr_1_1sync__block"/>
        <childnode refid="16093" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16094">
        <label>gr::basic_block</label>
        <link refid="classgr_1_1basic__block"/>
        <childnode refid="16095" relation="public-inheritance">
        </childnode>
        <childnode refid="16097" relation="public-inheritance">
        </childnode>
        <childnode refid="16098" relation="usage">
          <edgelabel>msg_queue</edgelabel>
        </childnode>
        <childnode refid="16100" relation="usage">
          <edgelabel>d_symbol_alias</edgelabel>
          <edgelabel>d_name</edgelabel>
          <edgelabel>d_symbol_name</edgelabel>
        </childnode>
        <childnode refid="16102" relation="usage">
          <edgelabel>d_rpc_vars</edgelabel>
        </childnode>
      </node>
      <node id="16101">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="16098">
        <label>std::map&lt; pmt::pmt_t, msg_queue_t, pmt::comparator &gt;</label>
        <childnode refid="16099" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="16102">
        <label>std::vector&lt; boost::any &gt;</label>
      </node>
      <node id="16090">
        <label>gr::uhd::usrp_source</label>
        <link refid="classgr_1_1uhd_1_1usrp__source"/>
        <childnode refid="16091" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16096">
        <label>gr::messages::msg_accepter</label>
        <link refid="classgr_1_1messages_1_1msg__accepter"/>
      </node>
      <node id="16103">
        <label>std::vector&lt; long &gt;</label>
      </node>
      <node id="16091">
        <label>gr::uhd::usrp_block</label>
        <link refid="classgr_1_1uhd_1_1usrp__block"/>
        <childnode refid="16092" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16093">
        <label>gr::block</label>
        <link refid="classgr_1_1block"/>
        <childnode refid="16094" relation="public-inheritance">
        </childnode>
        <childnode refid="16103" relation="usage">
          <edgelabel>d_min_output_buffer</edgelabel>
          <edgelabel>d_max_output_buffer</edgelabel>
        </childnode>
      </node>
      <node id="16097">
        <label>boost::enable_shared_from_this&lt; basic_block &gt;</label>
      </node>
      <node id="16100">
        <label>std::string</label>
        <childnode refid="16101" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" line="80" column="1" bodyfile="/home/project/prefix/src/gnuradio/gr-uhd/include/gnuradio/uhd/usrp_source.h" bodystart="79" bodyend="310"/>
    <listofallmembers>
      <member refid="classgr_1_1basic__block_1ab82376fe13f515cb904c0d2e9fec87b6" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>_post</name></member>
      <member refid="classgr_1_1block_1a099f578878243499d63846bbee61979a" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>active_thread_priority</name></member>
      <member refid="classgr_1_1block_1a8b7cc51b9d289124d6843bb392f564fc" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>add_item_tag</name></member>
      <member refid="classgr_1_1block_1a8f0ee37749a77d3f40a5bb04233f6028" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>add_item_tag</name></member>
      <member refid="classgr_1_1basic__block_1a42d65e902f4886602ff3d5b124a71ef3" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>alias</name></member>
      <member refid="classgr_1_1basic__block_1a817f3a7595c32fbce00983977d0dd91e" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>alias_pmt</name></member>
      <member refid="classgr_1_1basic__block_1aad58e9944ff205539855cd6116b03c55" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>alias_set</name></member>
      <member refid="classgr_1_1block_1a75313b29c3e68574bddf52ad7ab8c99a" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>alignment</name></member>
      <member refid="classgr_1_1basic__block_1a6cc897729213ab4d2e3ade44c6942100" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>basic_block</name></member>
      <member refid="classgr_1_1basic__block_1a451b45483aec67682289f4cf94e53f74" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>basic_block</name></member>
      <member refid="classgr_1_1basic__block_1ac84f6979cb9e7650de9d9205901401aaab729ab9b0c860fece10ea1eddab6ce52" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>BLACK</name></member>
      <member refid="classgr_1_1block_1a624c3e070c3df38e5d11e4acd0f59b46" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>block</name></member>
      <member refid="classgr_1_1block_1aebbc2ed68daafc4de5ee0f5df21efe6e" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>block</name></member>
      <member refid="classgr_1_1basic__block_1aca13d6f083397aada5b44d0f349ce151" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>check_topology</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1afe647fabef73a5159ace22999d6030ca" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>clear_command_time</name></member>
      <member refid="classgr_1_1block_1af19867ade7536783777a5c5e91b69972" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>clear_finished</name></member>
      <member refid="classgr_1_1basic__block_1a6d7621bc17d7bd50b8b36d905487adcf" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>color</name></member>
      <member refid="classgr_1_1block_1a47193333ce3fe1536fb1663bf314f63d" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>consume</name></member>
      <member refid="classgr_1_1block_1a12ea5eba701e22a3d023d0ba7c6ee07c" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>consume_each</name></member>
      <member refid="classgr_1_1basic__block_1afc7a00e9e0ff69ceb903d3d6ff506473" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_color</name></member>
      <member refid="classgr_1_1block_1a41a376b09fb8bfc8f692edb5f733aaaa" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_debug_logger</name></member>
      <member refid="classgr_1_1basic__block_1a84d6b200bb5e268424e9e4630cb22e5a" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_input_signature</name></member>
      <member refid="classgr_1_1block_1a7061aa0e90b8cb1750b790f65549e0ae" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_logger</name></member>
      <member refid="classgr_1_1block_1ab740ebd7e5e88ab5ed7039db9f054db1" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_max_output_buffer</name></member>
      <member refid="classgr_1_1basic__block_1aefa8ebb27b9d86bef179e30e37f0dfc3" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_message_subscribers</name></member>
      <member refid="classgr_1_1block_1a4c393a6daebc82ddf6844a62f1c5e8ae" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_min_output_buffer</name></member>
      <member refid="classgr_1_1basic__block_1ad7da20e98a288f84597882e047df63f4" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_name</name></member>
      <member refid="classgr_1_1basic__block_1a84c091a90172b2eb6d617f6346bbce3f" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_output_signature</name></member>
      <member refid="classgr_1_1block_1ad72091916b86278b58b6d106876b3e8c" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_pmt_done</name></member>
      <member refid="classgr_1_1basic__block_1a8d54f7ea6ebf134e68e028294488354d" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_rpc_set</name></member>
      <member refid="classgr_1_1basic__block_1a4956e5631a93b2ef667a28564e71195b" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_rpc_vars</name></member>
      <member refid="classgr_1_1block_1aaf5b8dd7bba021af7bd93f39453f7482" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_setlock</name></member>
      <member refid="classgr_1_1basic__block_1a2de4ae58aaf6af63fe57ecf0e64dcbe0" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_symbol_alias</name></member>
      <member refid="classgr_1_1basic__block_1af6b5f158f329834b12d9b204cf62a10e" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_symbol_name</name></member>
      <member refid="classgr_1_1basic__block_1a7073674b5876118ae50cd7cc5646ad80" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_symbolic_id</name></member>
      <member refid="classgr_1_1block_1a2460fc9ff6df7f38a51dadba06b94904" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_system_port</name></member>
      <member refid="classgr_1_1basic__block_1a8afb0c354fb5fc2141fc7580361c2f00" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>d_unique_id</name></member>
      <member refid="classgr_1_1block_1acad5d6e62ea885cb77d19f72451581c2" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>declare_sample_delay</name></member>
      <member refid="classgr_1_1block_1aa7df9d4ebb09530cd3be2ad78da411b4" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>declare_sample_delay</name></member>
      <member refid="classgr_1_1basic__block_1accb52d0722546dbfda92e4ee699d8276" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>delete_head_blocking</name></member>
      <member refid="classgr_1_1basic__block_1af9e69c810222df1bccbd159d660eda06" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>delete_head_nowait</name></member>
      <member refid="classgr_1_1block_1a816ec687bdd384a6cf8493fd54019054" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>detail</name></member>
      <member refid="classgr_1_1basic__block_1aa0c8bc1d82de984c872fbaefc0ff954b" prot="protected" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>dispatch_msg</name></member>
      <member refid="classgr_1_1basic__block_1a0ea70146bf5ce65a8c20c0b7234063d9" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>empty_handled_p</name></member>
      <member refid="classgr_1_1basic__block_1a75b7c42c06430e9f5330f7462a5350a1" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>empty_handled_p</name></member>
      <member refid="classgr_1_1basic__block_1aea4958dfb6cc37d60db6afaba91f6e6e" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>empty_p</name></member>
      <member refid="classgr_1_1basic__block_1aecb5d318b3d3689e6f7f448d29a03032" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>empty_p</name></member>
      <member refid="classgr_1_1block_1a71d3cc9f05edecef8b7bda7f16580848" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>enable_update_rate</name></member>
      <member refid="classgr_1_1basic__block_1acffa27c6be8af72ae44773185687d49c" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>erase_msg</name></member>
      <member refid="classgr_1_1block_1a9bbf96f6a81d5c289934a68ef44dd1b4" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>expand_minmax_buffer</name></member>
      <member refid="classgr_1_1block_1a89242cb1ac9d2bf5e75f923745baa576" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>finished</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a5bcd12598dafafc7800270704713cc46" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>finite_acquisition</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1aee684d444b362ba4cc5847ded529f05a" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>finite_acquisition_v</name></member>
      <member refid="classgr_1_1block_1a13de80e93b11535dfa2d6168610b5f6a" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>fixed_rate</name></member>
      <member refid="classgr_1_1sync__block_1a7e1560c84046771bf410d1f643f058af" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>fixed_rate_ninput_to_noutput</name></member>
      <member refid="classgr_1_1sync__block_1a67ecf7935b8a1c70a95ad22574eddeab" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>fixed_rate_noutput_to_ninput</name></member>
      <member refid="classgr_1_1sync__block_1a33b5a4849acaa3663ee14581a7b45186" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>forecast</name></member>
      <member refid="classgr_1_1sync__block_1a85ad1182f040814c0df45f985fa4dd69" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>general_work</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a57a71defced5326519d53bb097b6c6ab" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_antenna</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a0345e127d0d47eb04c3218b658e511b8" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_antennas</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1aa1d3bb7f11d0084cac2497e2da672d65" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_bandwidth</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1ac9028d873e01e4c5de2b4ef76549b500" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_bandwidth_range</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a89368e675b4cbce87c65a296d9ccb011" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_center_freq</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a86bbb5b0da5275a04b70e7da2cd14632" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_clock_rate</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a3b43de9978559c7e554a071d0181fb1f" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_clock_source</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1adbc5f3aaabb72f6a46b1a7502317b3a8" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_clock_sources</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a75a2b22e632785076d9aef68f0557dd0" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_dboard_iface</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a2111cef63308c34f542aadf276d64f34" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>get_dboard_sensor</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1adffea2cc34d5938861ab5e9e462cf197" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>get_dboard_sensor_names</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a4c3da4cab1096663ff720d3eb134927e" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_device</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1af79045e2f19c0bd6e6d840420773e97d" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_freq_range</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a01c8c74c099f3bdcf2b60c17811ecf9c" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_gain</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1afdf1d8990c19e1a87da4b777df3ff286" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_gain</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a756c14c66c5d9530f69e99afd6a4bb2d" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_gain_names</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a722ef4baec2f767a92923c53296f63f9" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_gain_range</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a9a7e9623b178c182b7bbeebdd49d8906" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_gain_range</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a305e93151f12a18a1b03471d21e38f99" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_gpio_attr</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1ab09502e1c8c43a546616b9a998f137f1" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_gpio_banks</name></member>
      <member refid="classgr_1_1basic__block_1a33724cc678371b3713e13ed29217963e" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>get_iterator</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a6c8a83506392847457c4f8e45a5ad982" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_lo_export_enabled</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1ad35db4d25ed80a730224a8d339391351" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_lo_freq</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a1dfb1260a0bc54d9e249e8a000d5d080" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_lo_freq_range</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a62187066bd946e4f88eadbc0ade2dd00" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_lo_names</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a390536679c895fc74b153a927c02f32f" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_lo_source</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a6d74e2ad35f036b8d81613ee243d31f8" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_lo_sources</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a419f5d60d9ca48d162c4001f79511c85" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_mboard_sensor</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a0a78e8ff14af39eecf77249d0e97ad2c" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_mboard_sensor_names</name></member>
      <member refid="classgr_1_1basic__block_1ac2b4a15fdf99bfebc20cbafea7c2fcf4" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>get_msg_map</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a61375076ede2973359e63ee5c344c9ac" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_normalized_gain</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a073a49047f97dc74c06b8ed2a647633d" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_num_mboards</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1af5fc38ee96e9e5b04350cfd46419cd41" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_samp_rate</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a1ff8083ab54c12853d12f9f0309a62d9" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_samp_rates</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a249fddbb3710046963c5a13fa5f47c2f" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_sensor</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a93d7ba19ddc5fbab42648e7759a3658f" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_sensor_names</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a2a640e06290b4262ca6539de6a346b53" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_subdev_spec</name></member>
      <member refid="classgr_1_1block_1aa0272555827fe26a1878e53ce4be092c" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>get_tags_in_range</name></member>
      <member refid="classgr_1_1block_1a83143d92b16b5bf93bf43a66a46bb60e" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>get_tags_in_range</name></member>
      <member refid="classgr_1_1block_1abf2cc497d68c4650be55765d0fe12291" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>get_tags_in_window</name></member>
      <member refid="classgr_1_1block_1a451b95d244e27e815eb3f9e56ea6ac32" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>get_tags_in_window</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a147e4e1bf80082fd646d3376c02cf7b7" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_time_last_pps</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1aa26791e5483d5491e50383f825d79263" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_time_now</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a53bf29fb3c4c870378ead9751baeb1bd" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_time_source</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a62e4bd08fb39b56956144ae4292b080c" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_time_sources</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a00f27ceb6665d837c09d59f8beb4663c" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>get_usrp_info</name></member>
      <member refid="classgr_1_1basic__block_1ac84f6979cb9e7650de9d9205901401aaa229412131f1cac62bf1cb3c63b12a19d" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>GREY</name></member>
      <member refid="classgr_1_1basic__block_1ac8bf058b47b635100945e20f3cc5d0b0" prot="protected" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>has_msg_handler</name></member>
      <member refid="classgr_1_1basic__block_1a8cdeb25c366bedbadf918b7f106dbf85" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>has_msg_port</name></member>
      <member refid="classgr_1_1block_1a71548fe7804c9b932f9bb9d770931af1" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>history</name></member>
      <member refid="classgr_1_1basic__block_1adddacbed1278d56e03fa1d5b93b1d542" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>input_signature</name></member>
      <member refid="classgr_1_1basic__block_1acbf0d8127f9b1da8dcb327b29391812a" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>insert_tail</name></member>
      <member refid="classgr_1_1block_1aac70128820e047e05993e4ec52b27c2a" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>is_pc_rpc_set</name></member>
      <member refid="classgr_1_1basic__block_1a10bd994a51158fd3803377960d688795" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>is_rpc_set</name></member>
      <member refid="classgr_1_1block_1a4f67d984bc126aa4d254e62464525b79" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>is_set_max_noutput_items</name></member>
      <member refid="classgr_1_1block_1ae0ed1517975b23c556b71486ffb972de" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>is_unaligned</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a357b19bd17d21fc68659b6eabdd5c195" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>issue_stream_cmd</name></member>
      <member refid="group__uhd__blk_1gacdac77bf10ba114f6fc3ae264e1c879f" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>make</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a11355ef67e41574d34bad8cd5710af9f" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>make</name></member>
      <member refid="classgr_1_1block_1af710a90819f19705f2d2ba1aa49d0172" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>max_noutput_items</name></member>
      <member refid="classgr_1_1block_1a5faeaab35423014dc59749d63cfe4cf1" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>max_output_buffer</name></member>
      <member refid="classgr_1_1basic__block_1a8780d41bb2091c00a9637e15e872a7ce" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>message_port_is_hier</name></member>
      <member refid="classgr_1_1basic__block_1a5cc9ea399d0940de8440e028b7352ed7" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>message_port_is_hier_in</name></member>
      <member refid="classgr_1_1basic__block_1a218a3ea133d838c8344fb3914c54ba3a" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>message_port_is_hier_out</name></member>
      <member refid="classgr_1_1basic__block_1a485fa8f9fa04a1abcfe3f111d22e8e5f" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>message_port_pub</name></member>
      <member refid="classgr_1_1basic__block_1a362b6de38292cca9c1d56439a6efad04" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>message_port_register_in</name></member>
      <member refid="classgr_1_1basic__block_1ac3047921885668943a13dabd35d5eda4" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>message_port_register_out</name></member>
      <member refid="classgr_1_1basic__block_1adddd339f229f55bd96229d7a7dd5cc8f" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>message_port_sub</name></member>
      <member refid="classgr_1_1basic__block_1ad5496693b3c7c8be32529d695f83db1c" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>message_port_unsub</name></member>
      <member refid="classgr_1_1basic__block_1ae92faa0b6775de0100f6d202140403a2" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>message_ports_in</name></member>
      <member refid="classgr_1_1basic__block_1ad6351658056b5381f3803233cb75c928" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>message_ports_out</name></member>
      <member refid="classgr_1_1basic__block_1a15300c27e1a332bc7dcff6438ec6c080" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>message_subscribers</name></member>
      <member refid="classgr_1_1block_1a1da7d9e876b5ff5fde12492ce55e9a81" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>min_noutput_items</name></member>
      <member refid="classgr_1_1block_1ac28e42e36ef843b999cca3702981ccd7" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>min_output_buffer</name></member>
      <member refid="classgr_1_1msg__accepter_1ae25bb0b46019f4dbe2bdcecdf50dc755" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>msg_accepter</name></member>
      <member refid="classgr_1_1basic__block_1a68e92e54cda7a02697074705b9a7c08d" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>msg_queue</name></member>
      <member refid="classgr_1_1basic__block_1a676337e5495c9ac73c0a551971181477" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>name</name></member>
      <member refid="classgr_1_1block_1a2279d1eb421203bc5b0f100a6d5dc263" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>nitems_read</name></member>
      <member refid="classgr_1_1block_1a742128a481fcb9e43a3e0cd535a57f9e" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>nitems_written</name></member>
      <member refid="classgr_1_1basic__block_1a4e3baf2d69f2a00871c89993e28b50ea" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>nmsgs</name></member>
      <member refid="classgr_1_1block_1a74745ea741b0aae938b003854f6043e0" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>no_pc_rpc</name></member>
      <member refid="classgr_1_1block_1adf235647d7ec77995751de89d94a22a6" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>notify_msg_neighbors</name></member>
      <member refid="classgr_1_1block_1a247e034ce4d624c1fee847f7779e90e1" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>output_multiple</name></member>
      <member refid="classgr_1_1block_1a4ff8a6d59b8bd64817aebfbd28d78326" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>output_multiple_set</name></member>
      <member refid="classgr_1_1basic__block_1a348d5801eeff564e75f508aba22766bd" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>output_signature</name></member>
      <member refid="classgr_1_1block_1a4989096e4edf5e8171b65e3ce663af1e" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_input_buffers_full</name></member>
      <member refid="classgr_1_1block_1a2dba88af74ee077751ebf5c11f470cbc" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_input_buffers_full</name></member>
      <member refid="classgr_1_1block_1a08e5deef4ebd0e6c2e11b839eaeadd9f" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_input_buffers_full_avg</name></member>
      <member refid="classgr_1_1block_1aa4118c626e74926918a9bfd464b728cf" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_input_buffers_full_avg</name></member>
      <member refid="classgr_1_1block_1a00723a35c6e095da35608c8438e16cdf" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_input_buffers_full_var</name></member>
      <member refid="classgr_1_1block_1a2c211a608a7d4dc40ad63886d1944798" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_input_buffers_full_var</name></member>
      <member refid="classgr_1_1block_1af4a03de0d6609ca0e03b875250b7650c" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_noutput_items</name></member>
      <member refid="classgr_1_1block_1a3beb47de467a4a117b0c096f8511d3af" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_noutput_items_avg</name></member>
      <member refid="classgr_1_1block_1ae0725cd4ff4f5040a513c2a61355d434" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_noutput_items_var</name></member>
      <member refid="classgr_1_1block_1a84ef5905d40b507a2230c996d8857289" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_nproduced</name></member>
      <member refid="classgr_1_1block_1ad0b4960e100a088caefa99fb39f99a02" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_nproduced_avg</name></member>
      <member refid="classgr_1_1block_1a1a506f34b8b8c3f968dc0a8cb9da0650" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_nproduced_var</name></member>
      <member refid="classgr_1_1block_1ab125047ee56cf687e3475674a28d267f" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_output_buffers_full</name></member>
      <member refid="classgr_1_1block_1a6ec7670b2a8d6d30113ab82683133b40" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_output_buffers_full</name></member>
      <member refid="classgr_1_1block_1a0ed8f2224fe1d0b27e17cd66723452a8" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_output_buffers_full_avg</name></member>
      <member refid="classgr_1_1block_1a0ddfee47fbd0d83826b8584ea7019b84" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_output_buffers_full_avg</name></member>
      <member refid="classgr_1_1block_1a2ad2a99ea794d44956d2878471e5976d" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_output_buffers_full_var</name></member>
      <member refid="classgr_1_1block_1affe32b7ec0d84efa56f5cc94723eb36f" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_output_buffers_full_var</name></member>
      <member refid="classgr_1_1block_1a78a27917edcd3b32f10b2166f3362a68" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_throughput_avg</name></member>
      <member refid="classgr_1_1block_1ae8b89079d24a3216eb1b17d75ec5b8d8" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_work_time</name></member>
      <member refid="classgr_1_1block_1a2df6452cef2999e1b32458a5e542f948" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_work_time_avg</name></member>
      <member refid="classgr_1_1block_1a2c9fdd36be297e4b503ccd6290663367" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_work_time_total</name></member>
      <member refid="classgr_1_1block_1a4918e75c4d11a0b7222c9ba250313ebc" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>pc_work_time_var</name></member>
      <member refid="classgr_1_1msg__accepter_1a03b0afcc820d3454d29f0ada3b89e2fc" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>post</name></member>
      <member refid="classgr_1_1block_1a3b37bd70477161aa97d1e868ff2b20d9" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>processor_affinity</name></member>
      <member refid="classgr_1_1block_1aa5581727d057bdd8113f8b2a3fc5bd66" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>produce</name></member>
      <member refid="classgr_1_1block_1aa14aceb3623b74b66d235fbb237cec88" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>relative_rate</name></member>
      <member refid="classgr_1_1block_1a461f6cc92174e83b10c3ec5336036768" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>remove_item_tag</name></member>
      <member refid="classgr_1_1block_1a94906298cd5995a94172c53dbfbc77dd" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>remove_item_tag</name></member>
      <member refid="classgr_1_1block_1adb2d3602fe818cef1978090923667009" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>reset_perf_counters</name></member>
      <member refid="classgr_1_1basic__block_1ac349eee015757c75f8486b36ee08b106" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>rpc_set</name></member>
      <member refid="classgr_1_1block_1a8bdbb506d7253d841277292c712c1a28" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>sample_delay</name></member>
      <member refid="classgr_1_1block_1a49b49c097bffefe79f9d730539330edf" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_alignment</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a3dd4bf829a3408fc6dda2e1251347451" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_antenna</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1adb62a194b0b0761c6a0b4c8c808a20b0" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_auto_dc_offset</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a0ba796d69a9c020fde92bbab40664236" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_auto_iq_balance</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1ad6e22e5d5c6a118d3581641d7a3323b5" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_bandwidth</name></member>
      <member refid="classgr_1_1basic__block_1ad5251b68da76a9ce6bef105ef8136547" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_block_alias</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1ae6a04f7001a10c4e39eef04050590f3d" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_center_freq</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1abee715a8a09943f37dde6c893258a58f" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_center_freq</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a5bafa447cbc05f95b206a950f5f83bed" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_clock_config</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a050219f726cb7cb6a6bf2a54c68ae54b" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_clock_rate</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a3bbb55b7fe3f71034a226b1c44fb85b6" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_clock_source</name></member>
      <member refid="classgr_1_1basic__block_1a2c4a58849217d8b76ba2d25c0dfd8bd0" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_color</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1ae5876b4e9350ea4bfbc16fedfcb65741" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_command_time</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1ae3a31eb295e486c17c9e3d4b051e2ba8" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_dc_offset</name></member>
      <member refid="classgr_1_1block_1a776fbf15f5280bf8da74929b4ea8bb39" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_detail</name></member>
      <member refid="classgr_1_1block_1aa927cd4d5b8993122cf60dd556ffe62d" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_fixed_rate</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a81ee1048dbd04c8664f1ea95129203f4" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_gain</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a21d8bdb0d51ac04daed10a5cee00581f" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_gain</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a643ecdd188565f6bfeca75a70e625ee9" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_gpio_attr</name></member>
      <member refid="classgr_1_1block_1ac2dac90e45498ad53a19544c01114136" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_history</name></member>
      <member refid="classgr_1_1basic__block_1a3f3f8f70bd0f0f2925b09bb75725c2b6" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_input_signature</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1abd1b40db06b33980dfc9c238b759a1e5" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_iq_balance</name></member>
      <member refid="classgr_1_1block_1a0d33c4cc8b0131b9b8df41e3b46784b1" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_is_unaligned</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a2e1684ad3b49b969d3ee5319b210ef12" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_lo_export_enabled</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a9d68f6c955bbcc764fbdc5d46a9e19bd" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_lo_freq</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1ae24f390fef2a0692dc230a5284ad1002" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_lo_source</name></member>
      <member refid="classgr_1_1block_1ae2405dc2f6c84bb8e59aab56e4ce9d84" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_max_noutput_items</name></member>
      <member refid="classgr_1_1block_1a711fb69e35fb871e9a5e41d6a1f2afb1" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_max_output_buffer</name></member>
      <member refid="classgr_1_1block_1a96d021628c08db3b138d3ee7c572ad90" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_max_output_buffer</name></member>
      <member refid="classgr_1_1block_1a65cfc579150dc4d10c6180d3365aa9a8" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_min_noutput_items</name></member>
      <member refid="classgr_1_1block_1a9d10e3f6747f91b215abe81b60a003d5" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_min_output_buffer</name></member>
      <member refid="classgr_1_1block_1a46a03397c78096a2f1c7f1b59f225f5b" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_min_output_buffer</name></member>
      <member refid="classgr_1_1basic__block_1a7fed11ec01538bfea999fb37687b43b4" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_msg_handler</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1acb55eecb7c3949a6940b284af35b5366" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_normalized_gain</name></member>
      <member refid="classgr_1_1block_1a63d67fd758b70c6f2d7b7d4edcec53b3" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_output_multiple</name></member>
      <member refid="classgr_1_1basic__block_1a7933b6bc4ad512774bbb40616cc31b4d" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_output_signature</name></member>
      <member refid="classgr_1_1block_1a05ad2ae50b0f7c922add44e74d9603b8" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>set_processor_affinity</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a4adf629512e551d1cc360a83e3667f51" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_recv_timeout</name></member>
      <member refid="classgr_1_1block_1aff3003eea3517dd3e8d9a5297c1196b1" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_relative_rate</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1aec7f2c84fdca8d00c24ab64da4b802ba" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_samp_rate</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1a810c34ba21faa4528c838b1c37a2b83b" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_start_time</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1abf9dfd3aefb33fc7eff2d8db4538142d" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_stream_args</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1af7967544d9d2883d7867408330b0ee82" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_subdev_spec</name></member>
      <member refid="classgr_1_1block_1a476e218927e426ac88c26431cbf086cd" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_tag_propagation_policy</name></member>
      <member refid="classgr_1_1block_1a83e0fd5c4db199e6e6f2fc75cdfb5dfa" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_thread_priority</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a2a8fe19791f663f7aaa6725a6a3f54b5" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_time_next_pps</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a6600322668d82211649e32d1689d1cab" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_time_now</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a8e7143eb310754be92ebf90599c4e1f1" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_time_source</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a0db19ffad09cf57a69343d9cad8564e9" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_time_unknown_pps</name></member>
      <member refid="classgr_1_1block_1a4d914fbc7814a682e25f5b2a40140d47" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>set_unaligned</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1ada6bee686090387a100952c755429c19" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>set_user_register</name></member>
      <member refid="classgr_1_1block_1a9425064fac92607770042f472e140d7e" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>setup_pc_rpc</name></member>
      <member refid="classgr_1_1basic__block_1a7f8bf6b9f28014657a6e8b5f25ca7802" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>setup_rpc</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__source_1addc61a8e14fef64c22a02c2597d0d10d" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>sptr</name></member>
      <member refid="classgr_1_1block_1a7f58745d1374b30a7b866406dc97850f" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>start</name></member>
      <member refid="classgr_1_1block_1a0863bc16f7c84adf4cddf5d53124450e" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>stop</name></member>
      <member refid="classgr_1_1basic__block_1ab5199f528de1872b055e632aedabef4e" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>symbol_name</name></member>
      <member refid="classgr_1_1basic__block_1a0436f10fd13ce2a80be2aeae345e903a" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>symbolic_id</name></member>
      <member refid="classgr_1_1sync__block_1a205473e9112aaffd3f92fcdcfa212ff4" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>sync_block</name></member>
      <member refid="classgr_1_1sync__block_1a1372aea30148feba7e744c58a88782e4" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>sync_block</name></member>
      <member refid="classgr_1_1block_1a4070b0462cce39d66b0c7c90ef2153d8" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>system_handler</name></member>
      <member refid="classgr_1_1block_1a4892196a19ef044a0eedeaa6566893c8" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>tag_propagation_policy</name></member>
      <member refid="classgr_1_1block_1abc40fd4d514724a5446a2b34b2352b4e" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>tag_propagation_policy_t</name></member>
      <member refid="classgr_1_1block_1a585b831aea5775730931d7fb9e6e8253" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>thread_priority</name></member>
      <member refid="classgr_1_1basic__block_1a84bf6924dfa0bb724caca46575669557" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>to_basic_block</name></member>
      <member refid="classgr_1_1block_1abc40fd4d514724a5446a2b34b2352b4ea5b3fd823d5f918e588008c0bc876e574" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>TPP_ALL_TO_ALL</name></member>
      <member refid="classgr_1_1block_1abc40fd4d514724a5446a2b34b2352b4eaadf6e1b257eee0590cc2b26161d08cdc" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>TPP_CUSTOM</name></member>
      <member refid="classgr_1_1block_1abc40fd4d514724a5446a2b34b2352b4ea2e3b11eb10000e0efab110c31a83e502" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>TPP_DONT</name></member>
      <member refid="classgr_1_1block_1abc40fd4d514724a5446a2b34b2352b4ea747127b6fb520f34be8ae3f951fdc53c" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>TPP_ONE_TO_ONE</name></member>
      <member refid="classgr_1_1block_1a53a85f2cd9f8ccef49eafad408069557" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>unaligned</name></member>
      <member refid="classgr_1_1basic__block_1a6e85f514a6c99d39593f0d250e787d2b" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>unique_id</name></member>
      <member refid="classgr_1_1block_1a460e8e5f15a4c5418ce3fc167c20a973" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>unset_max_noutput_items</name></member>
      <member refid="classgr_1_1block_1ac077773948a5f55b826dd638e1ed3863" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>unset_processor_affinity</name></member>
      <member refid="classgr_1_1block_1af32c62fff6b1285bf346bfda65e6fc3a" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>update_rate</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1ac8e89fcb9cea511367952520b4a9dfa2" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>usrp_block</name></member>
      <member refid="classgr_1_1uhd_1_1usrp__block_1a62d506ff6101c02274389569d97df060" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>usrp_block</name></member>
      <member refid="classgr_1_1basic__block_1ac84f6979cb9e7650de9d9205901401aa" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>vcolor</name></member>
      <member refid="classgr_1_1basic__block_1ac84f6979cb9e7650de9d9205901401aaa42ae6a0efeb1be877a188c7ad4778f50" prot="protected" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>WHITE</name></member>
      <member refid="classgr_1_1sync__block_1a38942c5d8bee5232404ab71ada9a3956" prot="public" virt="pure-virtual"><scope>gr::uhd::usrp_source</scope><name>work</name></member>
      <member refid="classgr_1_1block_1a944affae11431e5064252da6c3eae1fca8cac307593cf1087803f28eee28ff45a" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>WORK_CALLED_PRODUCE</name></member>
      <member refid="classgr_1_1block_1a944affae11431e5064252da6c3eae1fca3e2d37c41af566875030fa1376c4203f" prot="public" virt="non-virtual"><scope>gr::uhd::usrp_source</scope><name>WORK_DONE</name></member>
      <member refid="classgr_1_1basic__block_1aa2006a298a9d9c60ea52c6a33e003b96" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>~basic_block</name></member>
      <member refid="classgr_1_1block_1a1db946ecc4ab437c609802d991e545cc" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>~block</name></member>
      <member refid="classgr_1_1msg__accepter_1a4a566e988c3b4ba11d568b340499e307" prot="public" virt="virtual"><scope>gr::uhd::usrp_source</scope><name>~msg_accepter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
